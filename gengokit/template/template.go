// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/NAME-client/client.gotemplate (3.808kB)
// NAME-service/NAME-client/endpoints.gotemplate (2.437kB)
// NAME-service/NAME-client/grpc.gotemplate (3.876kB)
// NAME-service/cmd/NAME-server/main.gotemplate (728B)
// NAME-service/handlers/handlers.gotemplate (62B)
// NAME-service/handlers/hooks.gotemplate (62B)
// NAME-service/handlers/middlewares.gotemplate (75B)
// NAME-service/svc/client/cli/handlers/handlers.gotemplate (951B)
// NAME-service/svc/client/grpc/client.gotemplate (3.29kB)
// NAME-service/svc/client/http/client.gotemplate (105B)
// NAME-service/svc/endpoints.gotemplate (4.473kB)
// NAME-service/svc/server/run.gotemplate (7.21kB)
// NAME-service/svc/transport_grpc.gotemplate (3.745kB)
// NAME-service/svc/transport_http.gotemplate (106B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameClientClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5f\x6f\xe3\xb8\x11\x7f\x96\x3e\xc5\xac\xb1\xe8\x49\x81\x43\xa1\x0f\x7d\x71\xe1\x97\x26\x7b\x6d\x80\xdd\x5c\x90\x75\x2f\x0f\x87\xc3\x82\x96\xc6\x32\x6b\x9a\x34\x48\xca\x8e\x2b\xe8\xbb\x1f\x86\xa4\x64\xd9\x4e\x82\x3b\x03\xbb\xa1\xc8\xf9\x3f\xbf\xf9\x91\x45\x01\x77\xba\x42\xa8\x51\xa1\xe1\x0e\x2b\x58\x1e\xc1\x99\xc6\x5a\x06\xf7\xbf\xc0\xe3\x2f\x0b\xf8\x72\xff\xb0\x60\x69\x51\xc0\x33\x9a\x46\x29\xa1\xea\x20\x00\x07\x21\x25\xe8\x3d\x9a\x83\x11\x0e\xc1\xad\x85\x85\x95\x90\xe8\x85\x7f\x45\x63\x85\x56\x33\x68\x5b\x16\xd7\x5d\x37\x3a\x80\x7b\xee\x70\x7c\x4a\xdf\x5d\x97\x92\xc8\x13\x2f\x37\xbc\x46\xa8\xcd\xae\x84\x9d\xd1\x7b\x51\xa1\x05\x0e\xf5\xf3\xd3\x1d\x94\x52\xa0\x72\xb0\xd2\x06\xdc\x1a\xc9\xc0\x77\x34\x7b\x51\x22\x7b\xe4\x5b\xec\x3a\xb0\xf1\x33\xdd\x45\x33\x6d\xbb\xd0\xdf\x15\xdf\x20\x5c\x88\xfe\x08\xb6\xd2\x54\x6c\x77\xda\x38\xc8\x52\x00\x80\x89\xd0\x93\xb0\x70\x62\x8b\x71\x69\x8f\xaa\x9c\xa4\x61\x5d\x0b\xc7\xfe\xf1\xf7\xbd\x61\x52\x97\x5c\x16\x0a\xb5\x2a\xc2\xde\x41\x1b\x59\x31\xa1\x8b\x5a\x17\x52\xd7\x76\xa4\xb1\x6e\x96\xac\xd4\xdb\xa2\xd6\xb7\x1b\xe1\x0a\xfa\x87\xaa\xda\x69\xa1\xdc\xe4\x23\x21\xa9\xeb\x0f\xcf\x6d\x15\x8e\xad\xab\xf4\x0e\x95\x33\xbc\xa4\x0e\x8d\xa5\x47\xfb\xe3\xf5\x6d\xdd\xe7\x59\x6b\x5d\x4b\x64\xb5\x96\x5c\xd5\x4c\x9b\xba\xa0\xca\x8f\xd3\xe5\x62\xcb\x77\x31\xb1\x03\x3f\xfe\xff\x36\xb8\x2e\xe4\x32\x98\xf0\x89\xc7\xce\xfc\xc9\xfa\xc4\x2f\x6f\x29\x68\x4e\xd2\x34\x29\x0a\x58\x10\x8e\x62\xa3\xd2\x64\xb7\x84\x49\xdb\xb2\xa7\x7f\x3d\xf8\x1e\x3d\x71\xb7\x86\xdb\xae\x9b\xa4\x79\x9a\xba\xe3\x0e\xe1\x4e\x2b\x05\xd6\x99\xa6\x74\xd0\xfa\x60\x4a\xda\xb9\xa1\x14\xd8\x9d\x37\x4c\x22\xa1\x48\xc1\x2a\xec\x96\xec\x0a\x37\xf4\x85\x26\xed\x7a\xb3\x21\x99\x33\xc3\x5f\x62\xc3\xec\xe0\x06\x4b\x27\xb4\xb2\xb0\xe5\xbb\xdf\xac\x33\x42\xd5\xbf\xdf\x78\x6f\x5e\x62\xdb\xbc\x02\x10\x72\xd8\xf3\xcb\xb7\xc6\xe1\x2b\x59\xdf\x73\xf3\x67\xe2\x48\x4b\xad\xac\x83\x9f\x1b\x29\xe3\x39\x1d\xc3\x3c\x54\x23\x20\x3b\x28\x5c\x9b\x98\xa4\xe9\xaa\x51\x25\x3c\x28\xeb\xb8\x2a\x31\xcb\x3f\xf0\x14\x73\x33\xe8\x1a\xa3\xfa\xc8\xd2\x30\x88\x8f\x78\x88\x07\x16\xf8\x70\x08\x4b\x5e\x6e\x02\x53\x9c\xcf\xe4\xa9\x22\x0c\x1e\x1c\x08\x4b\x13\x4a\x76\x0c\xda\x9d\x56\x56\x2c\x85\x14\xee\x08\x7a\xe5\x47\xb7\xe4\x52\xa2\x01\xa7\xa1\x12\x5c\x4e\x81\xab\x0a\x24\x77\x68\xa0\x94\xda\xe2\x34\x08\x9d\x6c\x86\xa4\x1e\xf1\x90\x95\xab\x1a\x6e\x46\x98\x63\x77\x5a\xad\x44\x3d\x05\x11\x33\x36\x60\x2b\xd6\xa7\x6f\xa6\x40\x90\xa7\xcd\xb3\x21\x61\x0b\xbf\x3b\x05\xa9\xeb\x1a\x0d\xfd\x61\x5f\xfd\x32\x87\x9b\xd8\xff\x36\x4d\x62\x72\xb3\x39\xfc\x2d\x6c\xb6\x5d\xbf\xc9\xc6\x18\x98\xc3\x96\x6f\x30\xbb\x84\x42\x9e\xa6\x49\xdb\xde\xc2\x41\xb8\x35\x7c\x76\x48\x86\x58\xd7\xa5\xc9\x68\x77\xb7\xa9\x7d\x77\x67\x73\x92\x38\x6f\x6f\x9a\x04\x49\xc3\x55\x8d\xf0\x59\xf4\x42\x7d\x2f\xbf\xa1\x5b\xeb\xca\x76\x9d\x6f\x63\xff\x2b\x0a\x4f\x7b\x5f\xf5\xe1\x8e\x6f\x51\x7a\xeb\x9f\x45\x6c\x7c\x8f\xe3\x33\x8d\xf6\xec\x8b\x7e\x2b\x5e\x3a\x6d\x8e\xe4\x30\xa6\x1b\x77\xb2\x6f\x7c\x83\x6d\x7b\x65\xaf\xaf\x73\x5f\xd1\xfc\xca\x64\x4f\x79\x68\xc8\xaa\xad\xd8\x23\x1e\xbe\x0c\x7b\x99\x38\x75\x2c\xba\x7a\xdf\xd4\x92\xcb\xd0\xe9\xd9\x1c\xe4\x92\x0c\x3d\xeb\x46\x55\xcf\x7a\x29\x54\x76\xf2\x73\xad\x68\xd0\x85\xa4\xe4\x92\x3d\xd3\x9a\xe0\x14\x56\xec\x1b\x7f\x9d\x02\xd1\x3e\xfb\x8e\xa5\x56\xd5\x8d\x5f\xdf\x37\x86\x53\x8f\x47\x82\x0b\xb1\x45\xdd\xb8\x7c\x3a\xc4\x71\xed\x28\x16\x6d\x60\x0d\xf6\x46\xc9\x60\x1e\xe2\x39\x53\x8e\x3d\x47\x55\x45\x9c\xc4\x55\xbf\x38\xe3\xb2\xf9\x95\x9f\x34\x89\xc3\x1c\xaf\xb7\x2e\xd2\x41\x16\x91\x1c\xb1\x9d\xc3\x1d\x8d\x59\x96\x03\x1a\xa3\x89\x07\x12\xba\x54\x37\x78\x9c\x06\x0a\x9d\xcd\x23\xe8\xde\x00\x7b\x9b\x26\x09\xdd\x70\xec\x41\xad\x74\x36\xa1\x81\xf5\xd7\xce\x94\xf4\xf3\x34\x49\x48\xd8\x6b\xb0\xe8\x25\x4d\xba\x74\x88\x4c\x09\xf9\x7e\x58\x3d\xca\x68\x9c\x86\x3a\x91\x68\x66\x03\x63\xbd\x4f\x66\xf9\x80\x30\x76\x09\xca\xbf\x30\xfc\xb6\x62\x3f\x47\xec\xb7\x43\xc8\x3e\x80\x1e\xa0\x10\x26\x3c\x87\xec\x0d\x7f\x42\x87\x9c\xcd\x34\x54\x36\xf7\xd5\x2a\x0a\x78\x21\x3a\x6b\x64\x05\xff\x6b\xac\x03\x6e\x01\xb9\x15\xf2\x08\x8d\x45\xcf\x75\xff\x59\x2c\x9e\x40\x1b\x58\xac\x8d\x58\xb9\x9e\x55\xfb\x67\x8c\xd3\x9e\x60\x82\xa9\x73\x6a\xa4\x33\x5e\x55\x76\x5f\x32\x78\xc1\x9f\xf6\x08\xe5\x5a\x5b\x54\x81\x9d\xb9\x59\x0a\x67\xb8\x11\xf2\xc8\xe0\x51\xfb\xa7\x1a\x77\x27\x3b\xce\x70\x65\xfd\x03\x48\x78\x9a\x17\xdb\x9d\xc4\x2d\x2a\xe7\x41\x0f\x15\x3a\x2e\xe4\x0c\x84\x83\x4a\xa3\x55\x3f\x39\x90\xc8\x37\xa0\x1b\x07\x7a\xd5\x9b\xa1\xb7\x5f\xa3\x22\xf9\x3f\x8a\x12\x3f\xa5\x17\x73\xb0\x6d\x5e\xd9\x57\x5d\x6e\xb2\xd3\xa4\x54\xb8\xf2\x6c\x3f\x9c\xff\x57\xc9\x73\x89\x11\xc6\x6c\x35\x30\x92\xc1\x12\xc5\x1e\xab\x81\xef\x67\x84\xbc\xfe\x83\x18\x37\xa1\x6b\x36\x3c\x04\xfc\x7d\x9c\x24\x62\x05\x3f\xa6\xa0\x37\x23\x3a\x1b\x01\xfa\xb7\x5e\xf9\xf7\x7f\xc2\x27\xbd\xf1\x1d\x4b\x86\xc2\xf8\x46\x92\xa2\x7f\x54\xdc\x0b\x2e\x07\x24\x4c\xc3\xde\x8b\x70\xeb\x07\x65\xb1\x6c\x0c\x66\x39\x0d\x00\x39\x24\xad\x4f\x73\x42\x7b\x30\x38\x82\xff\x34\xfc\x87\xc6\xd0\x81\x9f\x78\x32\x34\x78\x7a\xc4\xc3\xbf\xcd\xae\xcc\x46\x31\x9c\x93\xeb\x14\xee\xdc\xeb\xaf\x5c\x36\x68\x17\xfa\x3b\xaa\x2a\x9b\xf0\xb2\x44\x6b\x7f\x6c\xf0\x38\x79\x3b\x84\x37\xa8\xf0\x3a\x9c\x2b\x26\xf2\x65\xa4\xdb\x4f\x2b\xd5\xd2\xc7\x6c\x14\x54\xa4\xa1\x19\x05\x1f\xa4\x3f\xa8\x2d\x91\x55\xe8\x46\x07\x28\x2d\x86\xaa\x44\xfb\x1f\x29\x92\x06\x75\x35\x06\x3c\x66\x86\xcc\x93\x4c\x0c\x23\x9f\x0e\x66\xfc\x04\x0e\x6d\xca\x7d\x82\xc4\x41\xfd\x03\x2f\x08\x9c\x1e\x78\x89\xdf\x08\x63\x1e\x29\xf1\x9a\xa2\x82\xd2\x1b\xcc\x79\xc6\xb8\xc1\x79\x96\xbf\x4f\x71\x17\xd1\x0d\x74\x32\x50\x87\x0f\x88\x70\xa0\xe8\xb9\x13\xbc\xa6\x49\x19\x2c\xc3\xfc\x2c\xcc\x4b\x32\xae\x50\xa2\xc3\x61\x1c\xe0\x62\x38\x86\x16\x8d\x06\x32\x49\xde\x1f\xc5\x38\x4c\x04\xa4\x50\x95\xbf\x32\x4b\xfd\x28\x91\xf6\xc7\xb2\x17\x97\x05\x45\x44\x69\x64\xd7\x3a\xe7\xc9\x74\x27\x58\xf8\x61\x1a\xdd\x32\x65\xda\xfd\x11\x00\x00\xff\xff\x04\x0b\xcd\xa9\xe0\x0e\x00\x00")

func nameClientClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameClientClientGotemplate,
		"NAME-client/client.gotemplate",
	)
}

func nameClientClientGotemplate() (*asset, error) {
	bytes, err := nameClientClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-client/client.gotemplate", size: 3808, mode: os.FileMode(0666), modTime: time.Unix(1596697959, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0xb6, 0x78, 0x42, 0x95, 0xc9, 0xa5, 0xf6, 0xf2, 0xd6, 0x75, 0x29, 0x6a, 0x6, 0xa6, 0x87, 0x8, 0xf8, 0xc5, 0xa5, 0x6f, 0x89, 0x1a, 0x99, 0x9f, 0x91, 0x1, 0x30, 0x76, 0xd, 0xa8, 0x1}}
	return a, nil
}

var _nameClientEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\xe3\x36\x10\x3d\x4b\x5f\x31\x35\x02\xac\x5d\x38\xf2\x7d\x81\xbd\x74\x77\xdb\xe6\x90\x6c\xb0\x09\x7a\x2d\x68\x69\x6c\x0d\x42\x91\x5c\x72\x64\xc7\x15\xf4\xef\xc5\x90\x92\xa2\x6c\xb4\x45\x0b\xf4\x10\x38\x26\x87\x6f\x66\xde\x7b\x33\xde\xed\xe0\xa3\xad\x10\x8e\x68\xd0\x2b\xc6\x0a\xf6\x17\x60\xdf\x86\x50\xc0\xa7\x2f\x70\xf7\xe5\x11\x3e\x7f\xba\x79\x2c\xf2\xdd\x0e\xbe\xa2\x6f\x8d\x21\x73\x4c\x01\x70\x26\xad\xc1\x9e\xd0\x9f\x3d\x31\x02\xd7\x14\xe0\x40\x1a\x63\xf0\x1f\xe8\x03\x59\xf3\x1e\xba\xae\x18\xfe\xef\xfb\xd9\x05\x7c\x52\x8c\xf3\x5b\xf9\xde\xf7\x79\xee\x54\xf9\xa4\x8e\x08\x5d\xf7\x68\x1f\x8c\x7a\x42\x28\x1e\xd0\x9f\xa8\xc4\xe2\x4e\x35\xd8\xf7\x7f\x96\x9a\xd0\x70\x2e\x60\x8f\x63\x4e\x28\xad\x61\x45\x26\x40\x83\x5c\xdb\x2a\x00\x5b\x68\xe4\x35\x99\x8a\x4e\x54\xb5\x4a\x03\x9a\xca\x59\x32\x1c\xe0\xe0\x6d\x03\x21\xc1\x86\xad\x20\x79\xfc\xd6\x62\x60\x50\xa6\x02\x8f\xc1\x59\x13\x10\xf8\xe2\x30\x22\x49\xa8\x74\x68\x03\xbe\xa0\x6c\x41\x05\x38\xa3\xd6\xf2\x89\xa6\xb4\x15\xfa\x20\x00\x82\x57\xe1\xf0\xfd\x60\xfd\xf0\x30\xa2\x6d\xe3\x81\x12\xe6\x0e\x60\x5b\x0f\xa1\x75\xce\x7a\x61\x9e\xbd\x32\x41\xfe\x97\x74\xa4\x34\xfd\xa5\x98\xac\x11\xb4\x83\xf5\x8d\xe2\x50\xe4\x39\x35\x31\x62\x9d\x67\x2b\x69\x19\x9f\x79\x95\x67\xab\x23\x71\xdd\xee\x8b\xd2\x36\xbb\xa3\xbd\x7e\x22\xde\xc9\xdf\x58\xe9\x2a\xcf\xb3\xae\xf3\xca\x1c\x11\xae\x08\xde\x7f\x80\xe2\xf3\x33\xa3\x37\x4a\xdf\x62\x08\xea\x88\x37\x11\x35\xf4\xbd\x04\x5e\x51\xfa\xbc\x96\x56\x45\x92\xcc\xed\x61\xd5\x75\xc5\xfd\x2f\x29\xee\x5e\x71\x0d\xd7\x7d\xbf\xca\x37\x51\x85\xcf\x13\xaf\xa5\xd5\x1a\x4b\x0e\x63\x83\x5c\xcf\xf8\x02\xae\x15\x43\x69\x1b\x27\x6c\x28\x03\xaa\xaa\x46\x11\x0a\xb8\xe1\x77\x41\xc0\x1a\x54\x86\x85\xf3\x3d\x42\x1b\xb0\x12\x72\x15\xd4\xa8\x1d\x7a\x08\xec\xdb\x92\xb7\x72\x3d\xa4\x5a\xce\x44\x86\x2d\x28\x81\x0b\x64\x8e\x1a\xc1\x29\xaf\x1a\x64\xf4\x62\x4e\x39\xbf\x31\xa0\x92\xac\x7e\x0b\xc4\xef\x82\x24\x3b\xb4\x3a\xca\x73\x68\x4d\x29\xd4\x0f\x25\x1b\x14\x75\x2c\x58\x17\x67\x04\xac\xbc\x75\xe8\xaf\xc7\x84\x02\xb8\x57\x81\x42\x01\xbf\x5a\x0f\xf8\xac\x1a\xa7\x71\x0b\x17\xdb\x42\x43\xc7\x9a\xc1\xa9\x20\xd6\x98\x51\x25\x05\x4e\x89\x52\x1e\xe7\x6d\xd5\x96\x18\x69\x50\x06\x6a\x66\x57\xfc\xae\x4c\xa5\xa5\xc6\x33\x71\x0d\xa8\xca\x7a\x70\x38\xac\xc7\xec\x1b\x38\x93\xc7\x0a\x5a\x97\x40\x83\xc3\x92\x0e\x54\x82\x53\x5c\x17\xb0\xbe\x89\xf5\x51\x10\xfc\xbd\xda\xeb\x0b\x28\x68\x28\x70\x9a\x0e\xa8\x30\xd0\xd1\xc8\x53\x32\x27\xfb\x84\x91\xca\x61\xe4\xa6\x69\x8a\x25\xe2\x6b\xb1\x93\x18\x02\x31\x32\x59\x6c\xe6\xec\xa6\x39\x7d\xcd\xee\x4c\xb8\x97\xc1\xd4\x17\x19\xdf\x04\x87\xd5\x3f\xc9\x28\x23\x94\xb8\x22\x61\xb8\xc1\x64\xab\x97\x7a\xc9\x30\xfa\x83\x12\x43\x2d\x2b\x21\x60\x53\xb2\xe5\xe5\xd0\x86\xb4\xe3\x86\x69\xdc\x45\x1d\xee\xf0\xfc\x71\xe8\xa7\xb4\xcd\x9e\x4c\xe4\xa9\x19\x4a\x9c\x09\xbb\x1d\x56\x08\xb7\xde\x00\x45\x27\x4b\x81\xa5\xd2\x1a\x7d\x32\xf3\xb8\xcf\xf2\xd8\xce\x1b\x42\xbb\xfc\xbb\x61\x1d\xe3\x6f\x93\x18\xe3\x94\x0e\xfb\x70\x7c\x0f\x00\x53\x13\xc5\x78\x98\xbf\x8c\x71\xff\x7a\x56\xff\x45\x12\x71\x27\xac\x67\x15\x6e\x60\x96\x77\x5d\xf2\x33\x0c\x3b\xa8\xf8\x98\x3e\xb7\xe2\x86\x9f\xbb\xee\x3e\x2d\x71\x09\x84\x2b\x2a\xbe\xa6\xe5\xfa\x78\x71\xe3\x12\x2f\xba\xee\x37\xfb\xe3\xeb\x0d\xac\x97\x50\xd2\x5a\xfe\x31\xcc\x9b\xfb\x2d\xa0\xf7\xd6\x6f\xa0\xcb\xb3\x6c\x5c\xeb\xf1\x50\x7a\xc6\x62\x81\x46\x69\x4b\xda\xd8\xe4\x59\x46\x87\x18\xfa\xd3\x07\x30\xa4\x23\x46\x36\x08\x6b\x48\x47\x98\x3c\xcb\xfa\x7c\x3a\x1d\x33\x14\xff\x4f\xf5\x9b\xad\xe4\xc9\xb3\x3e\xef\xba\x61\x15\xef\x76\x70\x2b\x73\x3b\x97\x31\x6e\x86\x2b\xc6\x28\x63\x32\xc7\x5c\xd9\x2b\xc6\x25\x71\x93\xba\x02\xb6\x44\x42\x00\xb7\x17\x76\x66\x6f\x53\xc4\x43\x1c\xf4\xcd\x5b\xa7\xbd\xa2\x47\xb0\x97\xfd\x31\xfe\xce\x4e\x83\xda\x89\xd8\xd3\x2f\xee\xec\x38\xc9\x34\xd3\x4f\xd0\xbf\x49\x47\x03\xc6\x32\xcb\xff\xd5\x69\x11\xf8\x34\x79\x22\x14\xdf\x59\x3c\x96\x9c\xa2\x16\xec\xb0\x64\x88\x64\x89\xe9\xe6\x34\xa8\x98\x8e\xa3\x3c\x49\xcc\x49\xd4\xbf\x03\x00\x00\xff\xff\xa1\x7e\xff\x1e\x85\x09\x00\x00")

func nameClientEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameClientEndpointsGotemplate,
		"NAME-client/endpoints.gotemplate",
	)
}

func nameClientEndpointsGotemplate() (*asset, error) {
	bytes, err := nameClientEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-client/endpoints.gotemplate", size: 2437, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0x59, 0xf1, 0x91, 0xff, 0x64, 0x18, 0xd5, 0x7e, 0x7d, 0x25, 0x80, 0xb7, 0xae, 0x57, 0x85, 0x91, 0x4b, 0x64, 0x19, 0xd1, 0x2c, 0x9b, 0xbc, 0x89, 0xf5, 0xc, 0x74, 0x8c, 0x53, 0x2b, 0xa9}}
	return a, nil
}

var _nameClientGrpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5f\x6f\xdb\x38\x0c\x7f\xb6\x3f\x05\x2f\x28\x0e\x76\xe1\x2a\xef\x3d\xe4\x65\x69\x6f\xd8\x61\xed\x82\x2e\xd8\x3d\x0c\xc3\xa0\xca\x8c\x23\xc4\x91\x3c\x49\x49\x1b\x18\xfe\xee\x07\x4a\x72\xea\xa4\x69\xd6\x87\x0b\x30\xcc\x12\xff\xf3\x47\x91\xec\x78\x0c\x53\x5d\x22\x54\xa8\xd0\x70\x87\x25\x3c\xee\xc0\x99\x8d\xb5\x0c\x6e\xbe\xc0\xfd\x97\x39\xdc\xde\x7c\x9a\xb3\x74\x3c\x86\x07\x34\x1b\xa5\xa4\xaa\x02\x03\x3c\xc9\xba\x06\xbd\x45\xf3\x64\xa4\x43\x70\x4b\x69\x61\x21\x6b\xf4\xcc\xdf\xd0\x58\xa9\xd5\x35\xb4\x2d\x8b\xdf\x5d\x37\x20\xc0\x0d\x77\x38\xa4\xd2\xb9\xeb\x52\x62\x99\x71\xb1\xe2\x15\x42\x65\x1a\x01\x8d\xd1\x5b\x59\xa2\x05\x0e\xd5\xc3\x6c\x0a\xa2\x96\xa8\x1c\x2c\xb4\x01\xb7\x44\x52\xf0\x15\xcd\x56\x0a\x64\xf7\x7c\x8d\x5d\x07\x36\x1e\xd3\x26\xaa\x69\xdb\xb9\xfe\xaa\xf8\x0a\xe1\x88\xf5\x67\xd0\x95\xa6\x72\xdd\x68\xe3\x20\x4b\x93\x91\xd0\xca\xe1\xb3\x1b\xa5\x00\x00\xa3\x4a\xba\xe5\xe6\x91\x09\xbd\x1e\x37\xab\x6a\x8c\xc6\x68\x63\x7b\x9a\xd6\x55\x8d\xac\xd2\x35\x57\x15\xd3\xa6\x1a\x93\xbf\x67\x89\xe3\x35\x3a\x5e\x72\xc7\x47\xa9\x67\xb3\xae\xd4\x0d\x2a\x67\xb8\xa0\xb4\x0e\xcd\x0d\xee\x87\xdf\x57\x95\x8e\xb2\x43\xe6\x4a\x5f\xad\xa4\x1b\xd3\x3f\x54\x65\xa3\xa5\x3a\x11\xc0\x80\xe9\x84\xe2\xc0\x4f\x4e\x3a\xc3\x95\xf5\xf9\x78\x5b\x3a\x30\xc4\x80\xcf\x59\xaa\x75\x15\x19\xda\xd6\x70\x55\x21\x5c\x48\xb8\x9e\x00\xbb\x7d\x76\x68\x14\xaf\xef\xd0\x5a\x5e\xe1\x27\x8f\x80\xed\xba\xc8\x7b\x21\xf7\x9f\x57\x80\xaa\xa4\xca\x48\xc6\x63\x98\x53\x91\x45\x14\xd3\xa4\x79\x84\x51\xdb\xb2\xd9\x87\x20\x3e\xe3\x6e\x09\x57\x5d\x37\x4a\x73\x5f\x47\xf7\xf8\x04\x06\xdd\xc6\x28\x0b\x5c\xf5\x85\x01\x8f\x5c\xac\x42\xa1\x1f\x96\x94\xd0\x4a\xa1\x70\x52\x2b\x06\x9f\x1c\x48\x4b\x05\x46\x7a\x0c\xda\x46\x2b\x2b\x1f\x65\x2d\xdd\x0e\xf4\xc2\x57\x9e\xe0\x75\x8d\x06\x9c\x86\x52\xf2\xba\x00\xae\x4a\xa8\xb9\x43\x03\xa2\xd6\x16\x8b\xc0\xf4\xa2\x33\x5d\x6c\x94\x20\x9f\x3e\x9a\x46\x64\x44\x80\x4b\x4a\x20\x9b\x7a\xf3\x53\xad\x54\x01\x84\x06\x9a\xa3\xc2\x60\x73\x7f\x5b\x40\xad\xab\x0a\x0d\xfd\xc7\x3e\xfb\xcf\x02\x74\x43\xca\x2d\x30\x16\xf5\x7c\xf1\x17\x39\x64\xcd\x23\x7b\xf5\x38\xe8\x44\x52\xbe\x90\x73\x68\xd3\x64\xcb\x0d\x08\x11\x53\x30\xd5\x6a\x21\xab\x34\x4d\xe8\x75\xfd\x2c\x60\x41\x50\x05\xd8\x7a\x3b\x6d\x9a\x24\x68\x0c\x11\x16\xd9\x9f\x42\xe4\x69\x92\xc8\x05\x29\x84\x3f\x26\xa0\x64\xed\x39\x92\x90\x76\x3a\x47\x63\x96\xfd\x6b\x78\x93\xa1\x31\x05\x8c\x04\x57\x4a\x3b\xe0\x4d\x53\xef\xa2\xe6\x11\x29\xea\xd2\x84\x70\x16\x83\x40\x2c\x59\xfa\xfe\xe3\xa0\x30\x0f\x22\x25\x73\xa7\xa8\x1f\x70\xa1\x0d\x66\xe4\x4c\x7c\xd3\xdf\x78\xbd\x41\x3b\xd7\x1f\x1f\x66\xd3\xbb\xf8\x10\x33\x21\xd8\x12\x79\x89\xc6\xe6\x79\x41\xe6\x29\x9a\x88\xc2\x3e\x20\xf0\xbf\x43\xb7\x26\xe4\x3e\xaa\x32\x3b\xb8\x2e\xe0\x8c\x2f\x43\x48\xa7\xc1\xa7\xe0\x4d\xe6\x0e\x00\xce\xf3\xdc\x9b\xa4\x5c\x50\xfd\x3f\x49\xb7\x84\x0b\x87\xfe\xe1\x74\x5d\x9a\x0c\x6e\x9b\x55\x45\xd0\x12\xe9\xc2\x21\x8b\xad\x33\xa0\x4d\xb1\x13\xe7\xf0\xe1\x11\x53\x5f\x13\x77\xe8\x96\xba\xb4\x81\xd1\x57\x02\xb5\xca\xcf\xfa\x09\x0d\x5c\xc8\x58\x32\xb7\xb1\xa1\x40\xdf\x59\x58\x7f\xe3\xa5\x3c\xda\x64\xe6\x6d\xc1\xc9\x51\x4e\xee\xf1\x29\xa4\x25\x0b\xb2\x84\x8f\x2a\xe2\xf7\xa8\x6d\xfb\x98\xba\x8e\xb5\xed\xd0\xdf\x70\x39\x1a\xb2\x4a\xe6\x3b\xfb\x11\xe5\x56\x09\x5d\x22\x65\xd6\xb3\x04\xea\x03\xfe\xda\xa0\x75\x3d\xcf\x0d\x9e\xe4\xf1\x2f\x1d\x7b\xa6\xb6\x1d\x24\x94\x42\xeb\x19\xe6\xbb\xa6\xf7\x87\xb5\xed\x47\x7d\x86\xde\x76\xbd\xb6\x83\x4a\x61\x8c\xc5\xfb\x7c\x9f\xd1\x2c\x4f\x63\xad\x1d\xfe\x4e\x94\xa4\x97\x0c\x0d\xf2\x5c\xe6\x5f\x75\x91\x98\xf9\xbe\xe0\x5e\xe7\x30\xcf\xce\x68\xcc\x83\xdd\x50\x30\xb1\xbe\x42\x77\x1e\x7c\xf5\x1f\x69\xdf\x05\x7a\x69\xdb\x12\xf1\x60\x0c\x1c\x95\x22\x75\x6f\xaf\xea\x95\xe5\xeb\xdf\xc4\x5a\xbc\xd8\x4d\xba\x82\x92\x94\x86\x65\x82\x10\x86\x10\x35\x04\xcc\xd3\xf3\x3e\x84\x35\xe5\x6c\x79\xd0\x6c\xe0\x70\x38\x07\x59\x90\xe8\x59\xfe\xa6\x66\xef\x96\xdc\x8f\x95\x2d\x1a\x67\x81\x93\x5e\x3f\x70\x4e\xc4\x01\x06\xa9\x19\x3a\x0d\x1c\x36\x16\xcd\x55\xa9\xd7\x5c\xaa\x37\x58\x83\x0d\x06\x33\x23\xd7\xdc\xc8\x7a\x47\x32\x8b\x4d\x0d\x52\x01\x8f\x8d\x2a\x0e\x9c\xb3\x81\x64\x3f\x21\x36\xc7\xbe\x21\x85\x06\xf6\xe0\x9d\x91\xca\xa1\x59\x70\x81\x6d\x97\x43\x36\x38\x0d\x07\x48\xf0\xfb\x7a\xf2\x22\xc7\xb2\xcb\xff\xe3\xdd\xe4\xfb\xfa\xf1\x26\x7a\x4c\xf7\xd5\x75\x84\x6d\x78\xf3\xef\xc2\xf6\x5c\x7b\x38\x09\x6d\x10\x88\x1c\x6f\x21\xfb\x7b\xd4\x82\x01\x0f\xf1\x99\x32\xf0\x5c\xef\x82\xf6\x5c\x1c\xa7\x90\xed\x3d\x78\x27\xae\xbf\xfc\xf4\x8f\xfe\x9c\xc4\xd4\x93\xde\x86\xf4\x98\x3c\x44\xf4\xd7\x2b\x3c\x53\xb7\x6b\xf0\x60\x11\x01\xeb\xcc\x46\x38\xf2\x26\xce\x68\xf8\xfe\xc3\x3a\x23\x55\x15\x1f\xf7\x70\x11\x08\xc8\x51\x62\xfc\xc9\x23\xb4\xd6\xa5\x5c\x48\xb4\x61\x17\xdb\xaf\x79\xb4\xe4\x78\x6b\x07\xf2\x24\x9a\x5d\x0e\x1d\xc8\x43\x3e\xd2\x90\xee\xa9\x7b\xee\x57\x88\xaf\x34\xf8\x57\xb8\xf3\x7b\x57\xf0\x28\x3f\x54\xd6\xee\x63\xf5\x6a\x35\x9c\x52\xec\xfb\xb8\xee\x17\x10\x98\x00\xa9\x4c\x87\xdb\x13\x6d\x24\x5d\xb4\x7f\x6e\x8d\xf1\xbe\xf4\xc9\xc9\x4f\x2e\x21\xc3\xf2\x3d\xf2\x4e\xb8\xe7\xd7\xd5\xb2\x2e\xe1\xb2\xff\x7b\x85\xdd\xdd\xe4\xc7\x1c\xde\x79\x5a\x1a\x1a\x2e\x87\xc8\x24\xfd\xf6\xb8\x7a\xd9\x1e\xbd\x7b\x7e\x68\xc9\x05\x6c\x0b\xd0\x9e\x26\xdc\x33\xf3\xd1\x64\xab\x9c\x65\xd1\xf7\xbf\x88\x18\xe6\x5b\x50\xbc\x5f\xb4\xfc\xb1\x80\x55\x01\x5b\x3f\x87\x3a\xbf\x31\x86\xfd\x33\xb0\x0e\xa7\xe3\xe5\xba\x84\x09\xec\x03\xf8\x47\x4b\x95\x5d\xae\xcb\xe2\xe5\x6a\x46\x32\x41\x2b\x63\x2c\xcf\x7b\x75\x31\x33\xc2\x3d\x87\xec\xff\x17\x00\x00\xff\xff\xca\xc2\x3d\xc4\x24\x0f\x00\x00")

func nameClientGrpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameClientGrpcGotemplate,
		"NAME-client/grpc.gotemplate",
	)
}

func nameClientGrpcGotemplate() (*asset, error) {
	bytes, err := nameClientGrpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-client/grpc.gotemplate", size: 3876, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0xa1, 0xa, 0x6a, 0x1c, 0x28, 0x84, 0xab, 0x1a, 0xc3, 0x57, 0x58, 0xaf, 0xd8, 0xa2, 0xae, 0xaf, 0x2e, 0x6, 0x47, 0x9c, 0x41, 0x2f, 0x16, 0x2d, 0xd5, 0xe7, 0x8b, 0xd8, 0xfc, 0xb2, 0x53}}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6b\xe3\x3e\x10\xc5\xcf\x9e\x4f\xf1\xfe\x3e\xfc\xb1\xa1\x95\xd8\xc3\x5e\x0a\x3d\x35\x3d\x84\x85\xb6\x34\xd9\xdd\xb3\x6a\x8f\x1d\x51\x47\x0a\x23\xc5\x21\x18\x7d\xf7\x45\xb6\x29\x39\xf6\x64\x49\x33\x6f\x78\xef\x37\xd6\x1a\x4f\xbe\x65\xf4\xec\x58\x4c\xe4\x16\x1f\x57\x44\x39\x87\xa0\xb0\x79\xc5\xcb\xeb\x1e\xcf\x9b\xed\x5e\x91\xd6\x78\x67\x39\x3b\x67\x5d\xbf\x34\xe0\x62\x87\x01\x7e\x64\xb9\x88\x8d\x8c\x78\xb0\x01\x9d\x1d\x78\x6e\xfe\xc3\x12\xac\x77\x0f\x98\x26\xb5\x9e\x53\xba\x29\x60\x63\x22\xdf\x56\xf3\x3d\x25\xa2\x93\x69\x3e\x4d\xcf\x38\x1a\xeb\x88\xec\xf1\xe4\x25\xa2\xa2\xa2\xec\x06\xd3\x97\x44\x45\xd9\xdb\xa8\x7e\xfe\x18\x45\x0d\xbe\x31\x83\x76\xec\x9d\x5e\xde\x2e\x5e\x86\x56\x59\xaf\x7b\xaf\x1b\xef\x3a\xdb\x97\x04\x00\xdf\x94\x0c\xbe\x0f\x8b\x60\x7e\x0d\x2c\x23\xcb\x77\xc5\xeb\xed\xfe\xd3\x46\xbd\x28\xb3\x59\xad\xb1\xcf\x5c\x76\x2c\xa3\x6d\x98\x8a\x72\x9a\xd4\x76\x0e\xf5\x66\xe2\x01\xf7\x29\x41\x87\xb1\xf9\x92\xd4\x44\xdd\xd9\x35\x73\xfc\xaa\xc6\x34\x8f\xf8\x7d\x6a\x4d\x64\x98\xb6\x15\x0e\x81\x03\x6c\x87\x78\xe0\x2b\x0e\x66\x64\x7c\x30\xbb\xaf\x3d\x44\x76\x79\x85\x19\x56\xa0\x22\x7f\xd4\x9b\x91\xc0\x55\x4d\x73\xb2\xd1\x08\x32\x9a\xdb\x88\xea\x69\x66\x45\x05\x8b\xe0\xe1\x11\x0b\x3a\xb5\x6b\x8c\xfb\xc5\xd7\xaa\x5c\xbd\xdd\xe1\xff\x5c\xa9\xa9\xb0\x1d\x72\xeb\x7f\x8f\x70\x76\xc8\x1e\xf3\xe4\x4c\x4f\xfd\x35\xe2\xaa\xb2\x33\x76\xe0\x16\xd1\xa3\xe7\x98\x9d\x62\x65\xb9\x2e\xe5\x0e\x25\x8b\xf8\x3c\x92\x45\xd4\x73\x3e\x57\x75\x4d\x45\x5a\x4c\xce\xa3\xb6\xae\xf3\x55\x19\xa2\x91\x98\xff\xb9\x69\x52\x2b\x44\xf5\x62\x8e\x9c\xd2\x6e\x71\x55\x53\xb1\xa6\x78\x3f\xbb\x6a\x31\x98\xe8\x5f\x00\x00\x00\xff\xff\xe1\x2d\x6c\x41\xd8\x02\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 728, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x9d, 0x63, 0xb9, 0x81, 0x46, 0x3f, 0x62, 0x31, 0x6, 0x65, 0x75, 0x6, 0x53, 0xba, 0xf9, 0xe1, 0xc2, 0x6e, 0x57, 0x7c, 0xc7, 0x97, 0xf3, 0x78, 0xce, 0xdb, 0x2b, 0xe, 0xf8, 0xde, 0xcc}}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0xfe, 0x9d, 0x1a, 0xaf, 0x47, 0xe8, 0x97, 0x82, 0x24, 0x50, 0x17, 0xb4, 0x49, 0x73, 0x3b, 0x68, 0xb7, 0xe5, 0x3a, 0x3d, 0xb6, 0x15, 0x9d, 0xb1, 0x8f, 0xc4, 0x27, 0xaf, 0xa7, 0x3c, 0xc1}}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xd1\x6b\xdb\x30\x10\xc6\x9f\xad\xbf\xe2\x28\xa6\xc4\x23\x95\xdf\x03\x7b\x68\x9b\xae\xe4\x61\x6d\xc8\xc2\xde\xd5\xf8\x62\x8b\xd9\x27\x4f\x92\x9b\x95\x43\xff\xfb\x90\xec\x26\xe9\x18\x64\xb0\x97\xe4\x74\xdf\xe7\x9f\x74\xfa\x54\x96\x70\x6f\x2a\x84\x1a\x09\xad\xf2\x58\xc1\xcb\x1b\x78\x3b\x38\x27\x61\xf9\x0c\x4f\xcf\x5b\x78\x58\xae\xb6\x52\x94\x25\x6c\xd0\x0e\x44\x9a\xea\xd1\x00\x07\xdd\xb6\x60\x5e\xd1\x1e\xac\xf6\x08\xbe\xd1\x0e\xf6\xba\xc5\x64\xfe\x8e\xd6\x69\x43\x0b\x60\x96\x53\x1d\xc2\x99\x00\x4b\xe5\xf1\x5c\x8d\xeb\x10\x84\xe8\xd5\xee\x87\xaa\x11\x1a\x45\x55\x8b\xd6\x09\xa1\xbb\xde\x58\x0f\x33\x91\xf5\x2f\x70\xc5\x9c\xcb\xf5\xdd\x2a\xf5\xd6\xca\x37\x70\x13\xc2\x95\x28\x84\x60\x86\x83\xf6\x0d\xe4\x1e\x61\xf1\x19\x64\x08\x22\x63\xb6\x8a\x6a\x84\x5c\xc7\x56\xee\x51\x7e\x43\xfb\xaa\x77\x28\xbf\xa2\x6f\x4c\xe5\xa2\xa9\x2c\x81\x39\xd7\xf2\x49\x75\x18\x02\xe8\xae\x6f\xb1\x43\xf2\x0e\xde\xcd\x22\xdb\x0f\xb4\x3b\x77\xcd\x98\xd3\x66\x9a\x2a\xfc\x95\xc0\xf7\xad\x46\xf2\xb7\xb6\x76\x89\x1d\x0b\x38\xda\x99\x1f\x4d\xac\x40\x7e\x19\x68\xe7\xb5\xa1\xa8\xc7\x3e\x52\x15\x42\x01\xb3\x4f\xcc\xeb\x71\xf2\xe4\xcb\xb5\xdc\xe0\xcf\x01\x9d\xdf\xbe\xf5\x38\x51\xe4\x11\xf3\x57\x79\x0e\x68\xad\xb1\x05\x8b\x2c\xb3\xa3\x1a\xa7\xfe\x7f\x70\x04\x32\xdf\x4c\xd7\xdb\xa1\x6f\x22\xf7\x9f\x46\x8f\xe9\x88\x2c\x3b\x05\xd1\x2b\xab\xba\x14\x46\xe4\xc8\xe4\x9d\x3c\x69\x0f\xbd\x07\x45\x15\xcc\xd2\x0f\x19\x3f\x7d\x21\x57\xee\x4e\x39\x8c\x87\x2a\x3e\xf4\x37\xd8\x63\x7c\xb7\xc5\xc7\xf6\x03\x0d\x5d\x31\x61\xb3\xd3\x74\xa3\x38\x05\xbd\x80\xeb\x3f\x95\x47\x73\x6b\xeb\x10\xe6\xc7\xe3\x60\xeb\x10\x2e\x72\x2e\x63\xa8\x3a\xdd\xc4\x69\x31\x49\xa9\x0e\x29\x35\x3f\x58\x82\xeb\x29\xbd\x39\x90\x6e\x45\x96\xde\xf1\x68\x7b\xff\xff\x1d\x00\x00\xff\xff\x93\xb9\xcf\x0f\xb7\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 951, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x1a, 0x10, 0xfc, 0x30, 0xd1, 0x96, 0xf3, 0x81, 0xe4, 0xce, 0xf5, 0x26, 0xb2, 0xdd, 0xb3, 0xad, 0x65, 0xa4, 0x52, 0x4, 0x79, 0xdb, 0x18, 0x32, 0x9d, 0xdd, 0x7d, 0x5f, 0x9, 0x89, 0x80}}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2c\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\x74\x0f\x45\x51\x30\xd4\x58\x26\x2c\x93\x2a\x49\x3b\x31\x04\xfd\xf7\xc5\x90\x94\x23\x27\x8e\xb7\x87\x3d\x04\xb1\x38\x8f\xf3\xf1\xde\x90\xc3\xe9\x14\xe6\xa6\x42\xa8\x51\xa3\x15\x1e\x2b\x78\xd8\x83\xb7\x5b\xe7\x38\xdc\x7c\x86\xdb\xcf\xf7\xf0\xfe\xe6\xe3\x3d\x67\xd3\x29\xdc\xa1\xdd\x6a\xad\x74\x1d\x01\xf0\xa8\x9a\x06\xcc\x0e\xed\xa3\x55\x1e\xc1\xaf\x94\x83\xa5\x6a\x30\x80\xbf\xa2\x75\xca\xe8\x6b\xe8\x3a\x9e\x7e\xf7\xfd\xc8\x00\x37\xc2\xe3\xd8\x4a\xdf\x7d\xcf\x08\xb2\x10\x72\x2d\x6a\x84\xda\xb6\x12\x5a\x6b\x76\xaa\x42\x07\x02\xea\xbb\xc5\x1c\x64\xa3\x50\x7b\x58\x1a\x0b\x7e\x85\xe4\xe0\x0b\xda\x9d\x92\xc8\x6f\xc5\x06\xfb\x1e\x5c\xfa\x64\xed\xc8\x0d\x63\x6a\xd3\x1a\xeb\x21\x67\xd9\x44\x1a\xed\xf1\xc9\x4f\x58\x36\xa9\x8d\xa9\x1b\xe4\xb5\x69\x84\xae\xb9\xb1\xf5\x94\xd0\x6f\x5b\xa6\x1b\xf4\xa2\x12\x5e\x04\x88\xf2\xab\xed\x03\x97\x66\x33\x6d\xd7\xf5\x14\xad\x35\xd6\x4d\xd8\xb1\xa5\x36\x57\x6b\xe5\xa7\xf4\x87\xba\x6a\x8d\xd2\x14\x98\x7c\x79\x2b\xb4\x0b\x49\xbd\x81\x3f\x00\x52\x52\x2c\x9b\x4e\xe1\x9e\x68\x4e\x25\xb3\x6c\xd2\x75\xfc\x63\xa8\x6c\x21\xfc\x0a\xae\xfa\x1e\xa6\x6e\x47\x05\xb4\x0f\x40\xc6\xc5\xbb\x63\xf3\x84\x15\x81\xe3\x5b\x7c\x04\x8b\x7e\x6b\xb5\x03\xa1\x07\xd2\xe0\x41\xc8\x75\x6c\x82\x63\xba\xa5\xd1\x1a\xa5\x57\x46\x73\xf8\xe8\x41\x39\x22\x9f\xfc\x58\x74\xad\xd1\x4e\x3d\xa8\x46\xf9\x3d\x98\x65\x50\x45\x8a\xa6\x41\x0b\xde\x40\xa5\x44\x53\x82\xd0\x15\x34\xc2\xa3\x05\xd9\x18\x87\x65\x04\x3d\xfb\x64\xcb\xad\x96\x94\x53\x4e\x8b\x70\x49\xf5\xf2\x79\x08\x3d\x37\x5a\x97\x60\x5a\xc2\x39\xe0\x3c\x2d\x7f\x0e\x0b\x05\xe4\xed\x03\x7f\xd5\x03\xf4\x85\xb6\x84\xa0\x48\x01\x1d\xcb\x76\xc2\x82\x94\xa9\x9a\xb9\xd1\x4b\x55\x33\x96\x51\x13\xfd\x28\x61\x09\xd7\x33\xb0\x42\xd7\x78\x88\xd3\xb1\x2c\x43\x6b\xc9\xb0\xcc\x7f\x97\xb2\x60\x59\xa6\x96\xe4\x10\x7e\x9b\x81\x56\x4d\x40\x64\x91\x41\xfa\x4e\xc1\x1c\xff\xc7\x8a\x36\x47\x6b\x4b\x98\x48\xa1\xb5\xf1\x20\xda\xb6\xd9\x27\xcf\x13\x72\xd4\xb3\xac\x67\x2c\x93\xa3\x42\x1c\x45\xfa\xf6\xfd\xa8\x2d\x8e\x2a\xa5\x70\xa7\xac\xef\x70\x69\x2c\xe6\x94\x4c\x6a\xeb\xaf\xa2\xd9\xa2\xbb\x37\x1f\xee\x16\xf3\x4f\xa9\x5b\x73\x29\xf9\x0a\x45\x85\xd6\x15\x45\x49\xe1\xb3\xae\xbb\x82\x47\xe5\x57\x70\xe1\x91\x82\xf3\xbe\x67\xd9\x68\xb5\x5d\xd7\x44\x26\x99\x2e\x3c\xf2\x74\x26\x23\xbf\x14\x8d\x90\x91\xb3\x0b\x35\x80\x06\x15\x3e\xa1\x5f\x99\xca\x45\x60\xe0\xbe\xeb\xee\xcd\xdf\xe6\x11\x2d\x5c\xa8\x24\xd2\xfb\x74\x1a\x60\x38\x16\x7c\x58\x09\xbb\x02\xbf\x14\xe6\xed\x8d\x33\x38\x66\xe4\x16\x1f\x23\x29\x79\xdc\x4b\x8c\xe8\x32\xfd\x9e\x74\xdd\x50\x53\xdf\xf3\xae\x1b\xe7\x1b\x17\x27\x63\xa8\xe2\x5f\xb4\x58\xe3\x0b\xcb\x7b\x2d\x4d\x85\xc4\x6c\x80\x44\xeb\x1d\xfe\xdc\xa2\xf3\x03\xe6\x06\x4f\x62\xc2\x31\xc1\x01\xd4\x75\x23\x42\xa9\xb4\x01\x70\xbf\x6f\x87\x7c\x78\xd7\x7d\x30\x67\xec\x5d\x3f\x78\x3b\xea\x24\xce\x79\x5a\x2f\x0e\x8c\xe6\x45\x58\x49\xc2\xa1\xae\x92\xd8\xe9\xd7\xf0\x83\x0d\x0d\xed\x76\xf2\xb0\xd7\x75\x04\x18\x4b\xfd\x52\x67\xba\x57\x82\xbb\x57\x12\x5d\x03\xc0\x39\xed\xcb\xe7\xd8\x59\x5f\xd2\x39\x62\x71\x04\x10\x7d\x10\xc5\x84\x48\x28\x3b\x9f\x43\x1c\x2e\x67\xb9\xa7\x5b\x4b\xc0\xf1\xa5\xca\xe3\x8e\x01\xf2\x27\x5d\x43\x7e\x25\xc2\x85\xb7\x43\xeb\x1d\x08\xf2\x1b\xae\xc2\x13\x75\x80\x45\x3a\xdb\xde\x80\x80\xad\x43\x7b\x55\x99\x8d\x50\xfa\x0d\x68\x8c\xc1\x61\x61\xd5\x46\x58\xd5\xec\x69\xcf\x72\xdb\x80\xd2\x20\xd2\xdd\x94\xae\xc2\xb3\x85\xe4\x3f\x20\x9d\x75\x3e\x8f\xff\xcb\x70\x12\xee\x42\x32\x4a\x7b\xb4\x4b\x21\xb1\xeb\x0b\xc8\x47\x5f\xe3\xfb\x30\xe6\x7d\x3d\x7b\xde\xc7\xf3\xcb\xff\xa3\x29\x8b\x43\x0f\x85\x10\x83\xa6\x87\x0e\x7b\xa1\x6d\x3c\x50\xbf\xa4\xed\xb9\xb3\x77\x52\xda\xb8\x21\x21\xde\x52\xf6\xbf\x55\x8b\x01\x82\xc4\x67\xda\x20\xa0\x7e\x49\xda\x73\x75\x9c\x52\x76\xc8\xe0\x17\x75\xfd\x19\x86\x59\xca\xe7\xa4\xa6\xc1\xf4\xb6\xa4\x2f\xcd\x63\x45\x7f\xbe\xd2\x93\xf9\x7d\x8b\x47\x73\x15\x9c\xb7\x5b\xe9\x29\x9b\x34\x72\xe0\xdb\x77\xe7\xad\xd2\x75\x3a\xdc\xe3\xb9\x16\x95\x23\x62\xc2\x57\x50\x68\x63\x2a\xb5\x54\xe8\xe2\x2b\xe1\xf0\x00\xa1\x99\x1d\xa2\x1d\xed\xa7\xad\xf9\xe5\x38\x81\x22\xf2\xc1\x22\xdd\x73\xff\x34\x4c\xc4\x2f\xa8\xab\x7c\x8d\xfb\xf0\x8c\x88\x19\x15\xc7\xce\xba\x43\xad\xc1\xad\x81\x53\x8e\xc3\xe8\x37\xc3\x3c\x85\x19\x90\x4b\x36\x7e\x0c\xd0\x80\xed\x53\xfc\x73\x53\x39\xe4\x32\x90\x53\xc0\xa9\xf9\x3e\x6e\xdf\x17\xd9\x49\xff\xf4\xba\x5b\x36\x15\x5c\x0e\x6f\x54\xfe\xe9\xa6\x78\x89\x08\xc9\xd3\x44\x6e\x85\x1a\x2b\x93\x0d\x8f\xa1\xf5\xf3\x63\x28\xa4\x17\xe6\xb0\x5a\xc2\xae\x04\x13\x6c\xd2\x3f\xf1\x50\x4d\xbe\x2e\x78\x9e\x72\xff\x83\x8c\x71\x64\x47\xc7\x33\x7a\xf6\x10\xdf\xe1\xb3\x84\x75\x09\xbb\x30\x84\xfa\xf0\x00\x8a\xcf\xa9\x08\x1d\x3f\xa8\x2e\x37\x15\xcc\xe0\x50\xc0\x5f\x46\xe9\xfc\x72\x53\x95\xcf\x4b\x0b\xda\x13\xbd\x72\xce\x8b\x62\x70\x97\x98\x91\xfe\x29\xb2\xff\x6f\x00\x00\x00\xff\xff\x11\x3e\x88\x85\xda\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3290, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0xda, 0x71, 0x6b, 0x7, 0xb7, 0x62, 0x81, 0x6f, 0x8a, 0xbd, 0xc4, 0x1d, 0x67, 0x9e, 0xdf, 0x55, 0x19, 0x6f, 0x46, 0x6b, 0x1b, 0x29, 0x51, 0xd1, 0xa5, 0xd9, 0x9, 0xdc, 0x9f, 0x33, 0x78}}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xf0, 0x36, 0xf9, 0x16, 0xea, 0x9d, 0x4e, 0x73, 0x64, 0xc5, 0xad, 0xb3, 0x1b, 0x4, 0xe, 0xd8, 0xc8, 0x1e, 0xf7, 0x7a, 0x39, 0x40, 0x4c, 0xb2, 0x12, 0x83, 0x35, 0xca, 0x82, 0x6f, 0xd0}}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4f\x6f\xdc\xb6\x13\x3d\xaf\x3e\xc5\x64\xe1\x1f\xbc\x1b\xc8\xdc\xbb\x03\x1f\x7e\x4d\xdc\xd6\x40\x9d\x18\xb1\xdb\x1e\x82\x20\xe0\x4a\xa3\x15\x61\x8a\x64\x48\x6a\xff\x54\xd0\x77\x2f\x86\x94\xb4\xda\x58\x4e\x93\xa2\xa7\xa2\x07\xc3\xbb\x22\xf9\x38\x33\xef\xcd\xd3\xec\x6a\x05\xaf\x75\x8e\xb0\x41\x85\x96\x7b\xcc\x61\x7d\x00\x6f\x6b\xe7\x18\xbc\x79\x07\x6f\xdf\x3d\xc0\xf5\x9b\x9b\x07\x96\xac\x56\xf0\x1e\x6d\xad\x94\x50\x9b\xb8\x01\x76\x42\x4a\xd0\x5b\xb4\x3b\x2b\x3c\x82\x2f\x85\x83\x42\x48\x0c\x9b\x7f\x43\xeb\x84\x56\x97\xd0\x34\xac\xfb\xdc\xb6\xa3\x05\x78\xc3\x3d\x8e\x57\xe9\x7b\xdb\x26\x89\xe1\xd9\x23\xdf\x20\xb8\x6d\x96\xd0\xfe\x87\x1e\x16\x32\xad\x3c\x17\xca\x41\x85\xbe\xd4\xb9\x03\xaf\xa1\xe2\x8f\x08\x42\xe5\x62\x2b\xf2\x9a\x4b\x40\x95\x1b\x2d\x94\x77\x50\x58\x5d\x81\x43\xbb\x15\x19\xba\x94\x90\x2c\x7e\xae\xd1\x79\xe0\x2a\x07\x8b\xce\x68\xe5\x10\xfc\xc1\x60\x40\xa2\xad\x94\x84\x76\x78\x44\x49\x81\x3b\xd8\xa1\x94\xf4\x1f\x55\xa6\x73\xb4\x8e\x00\x08\x2f\xc7\xee\x7b\xa1\x6d\x77\x30\xa0\xa5\xe1\x01\xa7\xe2\x14\xa0\x6b\x0b\xae\x36\x46\x5b\x2a\xae\xb7\x5c\x39\xfa\x4c\xd7\x09\x2e\xc5\x1f\xdc\x0b\xad\x08\xad\xd0\xb6\xe2\xde\xb1\x24\x11\x55\xd8\xb1\x48\x66\xf3\xa2\xf2\xf3\x64\x36\xa7\xcc\x71\xef\xe7\x49\x32\x9b\x6f\x84\x2f\xeb\x35\xcb\x74\xb5\xda\xe8\x8b\x47\xe1\x57\xf4\xd7\x47\x4c\x5b\x9a\xc6\x72\xb5\x41\x38\x13\x70\x79\x05\xec\x7a\xef\xd1\x2a\x2e\x6f\xd1\x39\xbe\xc1\x9b\x80\xee\xda\x36\x01\x00\x68\x9a\x33\x31\x7c\xbc\xa0\xc4\x89\x83\x99\x59\xc3\xbc\x69\xd8\xdd\x0f\x71\xf7\x1d\xf7\x25\x5c\xb4\xed\x3c\x59\x06\x4e\xae\x87\x2a\x67\x5a\x4a\xcc\xbc\xeb\xd3\xf5\xe5\xa8\x7a\xe0\x4b\xee\x21\xd3\x95\xa1\xda\x70\x05\x3c\xcf\x7b\x4a\x18\xdc\xf8\x73\x47\x60\x15\x72\xe5\x89\x81\x35\x42\xed\x30\xa7\x52\x73\x28\x51\x1a\xb4\xe0\xbc\xad\x33\x9f\xd2\x72\x77\xd5\xf4\x4d\x42\x79\x0d\x9c\xe0\x9c\x50\x1b\x89\x60\xb8\xe5\x15\x7a\xb4\xa4\x46\x7a\x7e\xa3\x80\x47\x92\x6d\x0a\xc2\x9f\x3b\xba\xac\xa8\x65\x20\xab\xa8\x55\x46\x44\x74\x21\x2b\x24\xae\x34\x68\x13\x9a\x02\x34\x9d\x35\x68\x2f\xfa\x0b\x09\x70\xcd\x9d\x70\x0c\x7e\xd4\x16\x70\xcf\x2b\x23\x31\x85\x83\xae\xa1\x12\x9b\xd2\x83\xe1\x8e\x84\x32\x2a\x15\x05\x38\x5c\x14\xef\x31\x56\xe7\x75\x86\xa1\x0c\x5c\x41\xe9\xbd\x61\x3f\x73\x95\x4b\x8a\x71\x27\x7c\x09\xc8\xb3\xb2\xd3\x3b\x2c\xfa\xdb\x97\xb0\x13\x16\x73\xa8\x4d\x04\x75\x06\x33\x51\x88\x0c\x0c\xf7\x25\x83\xc5\x4d\x88\x4f\x38\xc2\x5f\xf3\xb5\x3c\x00\x87\x4a\x38\x1f\x7b\x05\x72\x74\x62\xa3\xe8\xa8\x50\x5b\xfd\x88\xa1\x94\xf7\x91\x96\xa1\xb7\x42\x88\x78\x4a\x76\x24\x83\x20\xfa\x4a\xb2\xe5\xb8\xba\x99\x14\xa8\xfc\x69\x75\x47\xc4\x1d\xdb\x54\x1e\xa8\x99\x23\x1c\xe6\x5f\xa3\x91\x1a\x2a\xd6\x4a\x50\x85\x2b\x8c\xb2\x3a\xc6\x2b\x94\x47\x5b\x70\x12\xd4\x34\x13\x04\x36\x5c\x36\x6d\x15\xb5\x8b\xa6\xd6\xf5\xe6\x2a\xf0\xf0\x16\x77\xaf\xbb\x7c\x32\x5d\xad\x85\x0a\x75\xaa\xba\x10\x47\xc4\xa6\x9d\xa1\xf8\xda\x2a\x10\x41\xc9\x14\x60\xc6\xa5\x44\x1b\xc5\xdc\x05\xcb\x92\x90\xce\x93\x82\x36\xc9\x17\x2d\xdb\xef\xbf\x8d\x64\xb4\x2d\x35\xf5\x99\x60\x6f\x79\x85\x6d\xdb\x9f\xa7\xa6\xed\x93\x60\xfd\xc3\xe4\xd8\xc6\xed\x69\xaf\x7e\xc3\x25\xa4\x4e\x58\x8c\x22\x5c\xc2\xe8\xde\x45\xe6\xf7\xd0\x59\x11\x7b\x1d\xff\xa7\xa4\x86\x97\x4d\x73\x17\x5d\x9b\x36\xc2\x99\x60\xef\xa3\xd5\x3e\x1c\x0c\x76\x87\x59\xd3\xfc\xa4\x9f\x5f\x5e\xc2\x62\x0a\x25\x9a\xf4\xf3\x30\x4f\xd6\x53\x40\x6b\xb5\x5d\x42\x93\xcc\x66\xbd\xc9\x87\x87\x94\x33\xb2\x89\x32\x52\x5a\x94\xc6\x32\x99\xcd\x44\x11\xb6\xbe\xb8\x02\x25\x64\xc0\x98\x75\xc4\x2a\x21\x03\x4c\x32\x9b\xb5\xc9\xf0\xb4\xbf\x81\xfd\x33\xd1\x2f\x53\xba\x27\x99\xb5\x49\xd3\x74\x56\xbc\x5a\xc1\x2d\xf5\xed\x98\xc6\xe0\x0c\x67\x1e\x03\x8d\x51\x1c\x63\x66\xcf\x3c\x4e\x91\x1b\xd9\x25\xb0\xa9\x22\x38\x30\x6b\xaa\xce\xe8\x6c\xdc\x71\x1f\x1a\x7d\xf9\x54\x69\x27\xe5\x21\xec\x69\x7d\xf4\x6f\xdd\xa1\x51\x1b\x22\x7b\x78\xff\x8e\x1e\x47\x9a\x46\xfc\x11\xfa\x67\xca\xa8\xc3\x98\xae\xf2\xf7\x2a\x2d\x00\x6f\x07\x4d\x38\xf6\x85\xc4\x43\xc8\x71\xd7\x84\x1c\xa6\x04\x11\x25\x31\xac\x6c\x3b\x16\xe3\xe3\x40\x4f\x24\x73\x4c\xea\xef\x96\x9b\xff\x4b\x79\xbd\xcf\xd0\x78\xd8\x59\x6e\x5c\x34\xfb\xa1\xbc\x85\x40\x99\xd3\x9b\xae\x73\x89\xa3\x6d\x04\xfe\x83\x4b\x4e\x4c\x00\xec\x56\xe4\xb9\xc4\x1d\xb7\x71\x10\xfb\xd5\xf5\xa3\x19\x0d\x25\xc6\xc8\x03\x99\x1d\x19\xb8\x27\xf0\x6a\xd8\x1d\xde\x50\xb8\x45\x7b\x18\xb8\xa6\xe6\x26\x2f\xeb\xdf\xd9\x84\xf7\xce\xd0\xfb\x8b\x3c\x3c\x1d\x59\x68\xc6\x15\xbd\xbf\xe9\xad\x87\x39\x1d\x5b\x1f\x40\x11\x07\xf1\xbd\x8e\xfb\x4c\xd6\x39\xe6\x71\x2a\x5b\x23\x85\x40\x39\x1b\xcc\xd9\x93\x6a\x2c\x8e\x31\xa5\x30\xbf\xf7\xdc\xd7\x6e\x9e\xc2\xfc\x4e\xa8\xcd\x7c\x99\xf4\x26\xf5\x72\xe4\x52\xcf\x9d\x87\x89\xaa\xa4\xc7\x68\x18\x63\xce\x5b\xa1\x36\x41\x6f\x42\x75\x8f\x2f\xaf\xa0\xe2\xe6\x43\x5c\xfa\x18\xcb\xdf\xb4\x44\x3f\x99\xeb\x5f\x99\xe8\x6c\x36\x1f\x29\x6a\x7e\x09\x03\x40\x9b\x76\x10\x51\x06\x33\x9a\xb4\x88\x95\x4f\x14\x52\xd0\x79\x80\x1e\xc2\x6b\xa2\x23\x7d\x4a\x41\x3f\xd2\x72\x1f\xe0\x07\xdc\x7f\x7c\x05\x2f\xf4\x63\x94\xa4\xe1\x4a\x64\x8b\xa2\xf2\xec\xde\x58\xa1\x7c\xb1\x98\x5f\xf7\x10\x03\x93\xe7\xff\x73\xe7\x90\x6b\x74\xa0\xb4\x07\xdc\x0b\xe7\x5f\x81\x43\x1c\x0b\x60\xd0\x90\x63\x1b\x3d\xa7\xa0\x96\xcb\xce\xef\x72\x94\xe8\x71\xd1\x47\x10\xd6\x8e\x09\x08\x95\xa5\xf0\xe9\x98\xc1\x50\xc9\x6f\xaf\x99\x28\xe8\x14\x5c\x5d\xc1\x49\xf5\xba\xa6\x9b\x34\x6e\xb8\x1a\x05\xbf\x98\xdc\xb2\xec\xbb\xf0\xa4\xea\xb1\x03\x7f\xe1\x6b\x94\x98\x1f\x85\x11\x7f\xd0\x6c\xd0\xf7\x32\x1e\x8f\x98\x51\xcd\xbb\x12\xd5\xb0\xaa\x47\xca\xed\xc0\xa2\x00\xd3\xd8\x70\x5d\x4f\xd4\x71\x33\xc4\x5f\x49\x3c\xfe\xd4\x12\x19\x4d\x5a\x56\x64\x71\x04\x1e\xc5\x50\x8a\xac\x0c\x47\x1d\xaa\xa9\x10\xba\xf1\xa2\x3b\xdd\x0f\x57\xda\x76\xc3\xc5\xd3\xac\x82\x35\x47\x2d\xa7\x4f\x5d\x7c\xc2\xd8\x93\xe7\xf2\xfa\xdb\x36\xf5\x24\xa8\xb4\xcb\x33\x54\xdc\x62\x86\x62\x1b\xc7\xd0\x90\xe2\x17\xd3\x3d\x83\x7b\xc4\x01\x66\x84\x12\x16\xfa\xe9\x78\xb0\x00\x0a\x94\x44\x99\xa3\xe7\x42\x86\x49\xb6\xef\xa8\xf0\x3b\xab\x9b\xc0\xb9\x14\xfe\xc0\xbe\xe6\x26\x27\xb9\x8f\x4d\xe5\xbb\x2b\xfa\x9f\xe5\xfc\x2b\x2d\xe7\xe4\x58\x3a\x3d\x5d\x3e\xe7\x40\x7f\x06\x00\x00\xff\xff\x89\xae\x3d\xa8\x79\x11\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4473, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x25, 0xb4, 0xa3, 0x66, 0x45, 0x2, 0xe2, 0xb7, 0x16, 0x26, 0x6b, 0x73, 0xd7, 0x88, 0x4a, 0x94, 0xa1, 0x4e, 0x82, 0x17, 0x9c, 0x39, 0x79, 0x42, 0xbb, 0x6c, 0x8, 0x56, 0xdd, 0x57, 0x15}}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x39\x4b\x8f\xe5\xc4\xd5\x6b\xfb\x57\x1c\x2c\xe0\xb3\xbf\xf1\xd8\xf0\x7d\xca\xe6\x42\x2f\xa0\x87\x61\x46\xcc\x0c\xad\xee\x06\x16\xa3\x51\xab\xda\x3e\xd7\xb7\x68\xbb\xca\x54\x95\x6f\x4f\x73\xb9\x12\xab\x04\x10\x28\x59\x65\x93\x6c\x58\x85\x1d\x8a\x22\x45\x0a\xf9\x3d\x3d\x22\xff\x22\x3a\x55\xe5\x57\xbf\x68\x26\x8b\xdc\xc5\xb4\xab\xce\xa9\x53\xe7\xfd\xa8\xc9\x73\xf8\x18\x95\xe6\x52\x2c\x60\xb3\xc9\xfc\xf7\x76\x1b\x8e\x00\xb8\xc7\x0c\x4e\xa1\xb4\xde\x6e\xc3\xb0\x65\xc5\x09\xab\x10\x34\xaa\x35\xaa\x30\xe4\x4d\x2b\x95\x81\x38\x04\x00\x88\x0a\x29\x0c\x3e\x37\x91\x5b\x2d\x1b\x13\x85\x41\x24\xb0\xdf\x10\x68\xf2\x95\x31\xed\x85\x65\xde\xb6\x4a\x2e\xdd\x66\x9e\x47\xda\x28\x2e\x2a\xed\x91\x0c\x6f\x30\x0a\x3d\x0c\xfe\xbf\x84\x3d\xa6\xcc\x99\x5d\x0b\x34\xbc\x85\xa8\xe2\x66\xd5\x1d\x67\x85\x6c\x72\x23\x65\x7d\xc2\x8d\xce\xc7\x3b\x27\xd0\x15\xb6\x86\xcb\x9a\x1d\xeb\x7c\x85\xac\x36\xab\x62\x85\xc5\xc9\x65\xbc\x56\xc9\x06\xcd\x0a\x3b\x9d\x17\x35\x47\x61\x8e\x2a\x59\x33\x51\x4d\x01\xf4\x39\x11\xa5\x92\xb2\xaa\x31\x73\x78\x99\x54\x55\x5e\xa9\xb6\xf0\x7c\x1f\x11\x3c\xeb\x8e\x51\x59\x08\xeb\x8c\x6c\xd8\xf3\x56\xc9\x42\x7b\x0c\xba\x3d\xfb\xcd\x9b\x6b\x95\xd5\xb2\x60\x75\x2e\x50\x8a\xdc\xed\x9d\x4a\x55\x97\x19\x97\x79\x25\xf3\x5a\x0e\x6a\xb9\xdd\x01\xbf\xba\x7b\xc2\x0d\x1d\xce\x3f\x67\xed\x4b\x9f\x6f\xd0\x28\x5e\xf8\xfb\xed\xb6\xf3\x81\x97\xa1\xe5\x4e\xbe\x34\x2b\x46\xb1\x82\x8b\x6a\xf0\x98\x5b\x50\x20\x88\xe1\xb4\x8f\xa2\x55\xd2\x8c\x3b\x77\x59\xcb\x75\xde\xc8\x4f\x65\x5e\x48\xd5\xfb\xda\x09\x37\xa3\xb5\x67\xde\x51\x49\xcb\xc3\x44\x25\x13\xbf\x70\x2c\x69\x53\x5e\x73\xf8\x16\xae\x15\x85\x61\x90\xe7\x70\xb8\xe2\x1a\x0e\x50\xad\x79\x81\x61\xd0\x1e\x43\xb4\xd9\x64\x7b\xef\x3e\xb4\xf1\xb6\xc7\xcc\x0a\xee\x6e\xb7\x14\x5e\x9b\x4d\x36\xdf\x84\x5c\xaf\x8b\x6b\x20\x2b\x26\xca\x1a\x95\x8e\xc2\x24\x0c\xc3\x65\x27\x0a\x78\x82\xa7\xef\x89\xb2\x95\x5c\x18\x1d\x4b\x8a\x10\xa1\xa1\x61\xed\x53\x17\x87\xcf\xb8\x30\xa8\x96\xac\xc0\xcd\x36\x01\xbd\x2e\xb2\x01\x1b\x36\x96\xd3\x77\x3b\xcd\x05\x6a\x0d\xa5\x6c\x18\x17\x59\x18\xac\x99\xb2\x09\x82\x17\x08\xed\x71\xb6\xd9\x64\x5e\x90\xec\x09\x6b\x70\xbb\x3d\x70\xc9\x23\xd8\x84\x41\xd0\xe3\xed\x40\xcf\x5b\xf6\x04\x4f\x3d\x7e\x9c\x84\x01\x5d\xf1\x89\x62\x6d\xaf\x0c\x38\xe5\x66\x05\x0d\x2f\xcb\x1a\x4f\x99\x42\x9d\xc1\x01\xe2\x70\x3a\x9f\x42\x2a\x79\xf5\x0d\x44\xaf\xbf\xc2\x83\x53\xf0\xb2\x27\x61\xb0\x75\x26\xe8\x05\x9d\x0b\x16\x87\xc1\x66\xa3\x98\xa8\x10\x5e\xe5\xb0\xd8\x81\x41\xb8\xc7\x68\x56\xb2\xd4\xa4\xe9\x30\x08\x36\x9b\x43\xf9\x48\x9e\xee\xb2\x06\x6b\x12\x1b\x5e\xe5\x5e\xfc\x81\xee\x8e\xd5\xe7\x63\x76\x82\x9b\xcd\x25\x68\xcf\x58\x42\xf7\xa1\x28\x89\x68\x12\x86\x01\x0e\xea\x5f\xec\xcc\xed\xb1\xb9\x35\x67\x97\x2e\x5b\x90\xdb\xfe\x32\xc7\xe9\x84\x17\xaf\x24\x6b\x1a\x8d\x35\x16\x06\x4b\x18\x7d\xe3\x57\x5a\x69\x94\xea\x82\x99\x46\xdf\x1c\x50\x26\xa6\x0a\x03\x85\xa6\x53\x02\x06\x60\xb8\x0d\x43\x32\x53\x21\x85\xee\xea\x5d\x29\x96\xbc\x9a\xa6\xab\xec\x23\x55\x5b\x04\x4a\x22\x78\x0d\xdc\x45\x06\x17\xdc\xc4\x09\x79\x39\x2a\x45\xfa\x2c\x2c\x76\x76\x50\x30\xf1\x01\x9e\xc5\x91\xbb\x23\x4a\xe1\xf5\xe9\x6d\x49\x18\xf0\x25\xd0\x91\x57\x76\x40\xf0\x9a\x08\x04\x94\xba\xb3\xf7\x94\x92\x2a\x8e\x96\x8c\xd7\x58\x82\x91\x50\xa1\x01\xb3\x42\xcf\xac\xa7\x1f\xa5\x10\x21\x61\x46\x29\x51\xf1\xa7\x12\xef\x97\x44\xf7\x32\x27\x56\x18\x3a\xf0\xfa\x44\xac\x5f\xcb\x88\xa5\x71\x0b\x26\xb6\x21\x75\x0a\xfb\x9d\x00\x6d\x98\x32\x1a\x18\x08\x3c\x05\x2a\x87\xbe\x2f\x48\xa1\xda\xdf\xdb\x1d\x16\x4c\x94\xc0\xa0\xc4\xe3\xae\xf2\x7b\xce\x3d\xcc\x0a\x89\x52\xcb\xb4\xc6\xd2\x5f\x6c\x91\x6b\x59\x55\xa8\x9c\x15\xf6\x3b\x11\x17\xcb\xb9\x8d\xbc\x7c\xb0\xb1\xe9\x96\xb4\x67\xe0\x7e\x57\xd7\xde\xdf\xad\xf3\xee\xb8\x8c\xe9\xfa\x15\xe7\xc6\x97\x33\xd1\xd8\x59\xf8\x9a\x62\x8d\x1e\x06\x4e\x17\x29\x14\x64\x76\x0f\xa2\xbc\x14\x5f\xb8\x25\x9d\xba\x51\xf6\x40\x6a\x33\xdf\xd9\x93\xca\x38\x33\x14\x53\x23\x94\xb8\x24\x4d\x67\xbb\xb5\xd4\x36\xc9\x6d\x07\x3e\x76\x15\x32\x83\xc0\x40\x73\x51\xd5\xe8\x55\x91\xc2\xe9\x8a\x17\x2b\x38\xc5\xff\xa9\x6b\xe8\x34\x5a\x35\x55\x7c\x8d\x64\x3d\x69\x56\xd6\x70\x4d\x2b\x05\x0a\xa3\x33\x4b\xcc\x9d\x24\x01\x3e\x67\x6d\xf6\xc8\xae\xe2\xc4\x5d\xe4\x2b\x97\x77\xff\xc5\x4e\xbf\x41\x32\xba\xcd\x38\xea\x0b\x7e\x62\x4f\x2c\x39\xd6\xe5\x07\x78\x66\xd3\xce\xd3\x67\xae\x38\x6c\x08\x69\x25\x4b\xf2\x16\x56\x14\xa8\xf5\xd1\x09\x9e\x8d\xbe\xb3\xf5\xf6\xe9\x84\xa1\x63\xb3\xa2\xea\xae\xea\xa8\xba\xdc\x57\xb2\x89\x67\x45\x33\xf3\x90\x0f\x5b\x4a\x6b\xe0\x7f\xa4\x71\xdd\xb2\x02\x17\x73\x01\xb2\x7b\xd8\x32\x65\x1a\xa4\x0c\xd5\x23\x1f\x74\xc7\xfa\x4c\x1b\x6c\x2e\x22\xef\x29\xf9\x29\x16\x13\x4c\x22\xbb\x70\x9f\x91\xc2\xcf\x3a\xd4\xe6\xc8\xf2\x1c\x8d\x38\x0f\xb0\x6e\x7b\x9c\x27\x5d\x73\x8c\x0a\xe4\x12\x3c\xb6\x06\x85\x05\xf2\x35\x96\x99\x3f\xb2\x4d\x47\x85\x79\x95\xd7\xcc\xa0\x28\xce\xae\xd4\xc3\x03\xae\x8d\xac\x14\x6b\xae\xd0\xc4\x00\xfb\xaf\xe9\xc2\x73\x7e\xa4\xb1\x90\xa2\xd4\xd7\x68\xe5\x50\x1a\x56\x43\xd9\x29\xdb\x55\xcd\xb4\xc3\x05\xf8\xb3\x37\xe8\x27\xcf\xd7\xac\xe6\x25\x33\xd2\xfa\xec\x58\x20\x48\x41\x1f\xf7\xa0\xde\x81\x67\x55\x70\xd6\xc2\x5c\xdd\xba\x8c\x8a\x83\x3e\x59\x2e\x7c\xc6\x4b\x27\x20\x17\x33\xd1\xa2\x0f\xbb\x09\xc8\x79\xc4\xc2\x79\xf3\xec\x8c\x53\x0f\x1d\x72\x5f\x13\x60\x9e\x47\x83\x54\xd1\x02\x86\x6f\x8f\xb2\x1d\x64\xd7\xe5\x18\x8b\xba\x9c\x86\xa1\x2e\x7d\x04\x5a\x24\xdb\x34\x8e\x48\x71\x7f\x2e\xf5\x1c\x0f\x04\xf9\x12\x06\xf4\x21\xf3\x8c\x6c\x75\xaa\x26\x2a\x11\x9a\xa2\x5c\xe4\x79\x74\x87\xa6\xa9\x53\xa9\x4e\xb2\xf7\xd1\x50\x1e\x8b\x13\xb8\x03\xd1\x22\x82\x3b\x54\x1c\xde\x57\x6d\x41\xb9\x8c\x32\x71\x46\x8b\x77\xca\x52\x25\x13\x7a\xbe\x42\xf6\x57\x66\xfb\x58\x71\x6d\x50\xc5\x9d\xaa\xd3\x8b\xb9\x39\x1d\x13\xc8\x76\x4a\xe4\x62\xb5\x82\xc9\x2f\xcf\x5b\x26\x78\x11\xa3\x9a\xdd\xbb\x9d\x7c\xbb\xac\x3a\xb0\x70\x0f\x55\xcf\x44\xaf\xc0\x6d\xe8\x9a\x96\xc7\x58\xac\x88\x1a\x39\x6c\xdf\xdb\xa1\x52\x36\xdb\x37\xec\x04\x63\x02\x83\xcd\x61\x89\x3b\xf1\x90\x5c\x49\x75\xad\xe9\xbb\x93\x2c\x0c\x2a\x39\xb6\x2a\x03\xfc\x81\xdb\x21\x3e\x0b\x77\xf6\xfc\xab\x3f\x9d\xff\xf3\xa7\x17\x7f\xfb\xe1\xfc\xb7\xdf\x9e\xff\xf8\x8f\x9f\xff\xfa\xbd\xe7\xc6\xb1\xc7\xac\xe2\x7a\x56\x47\xc5\x4d\x5b\x0a\x5f\x59\x66\x5b\x64\x8e\x94\x6c\xe3\xac\x95\x02\x99\xe6\x81\x31\x2d\x99\x66\xe2\x0e\xc4\xfd\x3d\x5b\x7a\x6b\x22\x2c\x7a\xd6\xa9\xb8\xba\xee\x06\x5c\xb1\x20\x21\x96\x32\x8e\x8e\xb1\xe2\x62\x56\xad\x29\xa1\x1b\xc5\x84\xa6\x61\x82\x16\x16\x68\x93\x7e\x59\x2a\xd4\x3a\x72\xb7\xdb\x6b\x9c\x67\x84\x41\xd0\x90\x5c\xd4\x14\xf4\x0d\x3d\x3e\xee\x9e\xdb\x8e\xbe\xc9\x9c\x96\xe2\x28\xb7\x94\xdc\x03\x40\x1e\xa5\x0e\xdd\xab\xf0\x3e\x31\x68\x21\xd9\x43\x51\xe2\xf3\xe4\x86\xa3\x45\x53\xd6\x5c\xe0\xf5\x14\x76\x1d\xc2\x4d\x34\xe8\x1f\x5e\xdf\x40\x63\xcf\x21\xdc\x44\x43\x9f\x35\xc7\xb2\xbe\x9e\xc4\x81\x85\xdf\x44\xc1\xe6\xa4\xeb\x09\x1c\x12\x38\xf1\x51\x4e\xbf\x09\x99\xbe\x60\xa7\xd0\xbf\x4e\xf4\x04\xe2\xe9\x09\xf7\xf6\x61\x8d\x33\xbe\x82\xd8\x2a\xd4\x23\x5f\x40\xcd\xde\x29\xcb\x47\x7c\x8d\x34\xe4\xed\x12\x72\x1c\x0d\xbd\x1e\x77\xcc\x4e\x08\x1d\xee\xee\xdd\xe3\xac\x76\x88\x73\x9f\x34\xbc\xc1\xec\xc0\x56\x82\x24\xb9\x4a\x02\x47\xe7\x2a\xe9\x3d\x27\xc4\x46\x9f\xea\x13\xeb\x65\x36\x6c\xdf\xbe\xeb\x4e\x3c\xb2\x1e\xfe\x8e\x28\xad\xbb\xc5\x33\x9f\x4c\xa1\xa1\x46\x2b\xf6\x21\xf1\xe0\xf0\x70\x0f\x06\xa7\xbe\x55\x48\x4c\x1a\xdc\x4b\x11\x41\xe4\x2e\x07\x44\x2f\x7a\xe2\x28\xe6\xf9\xf9\x1f\x7e\x3c\xff\xe6\x87\xf3\xaf\xbf\x7b\xf1\xf5\x5f\x7e\xfe\xfe\x5b\x97\x14\x26\x29\xac\x4f\x09\x63\x1a\x20\x57\x59\xf5\xa3\x1e\x8d\x8a\x74\xd3\x90\x64\xc6\x91\xa8\xef\x58\xfb\xb8\xff\x65\xcd\x8c\x76\x59\x4d\x15\x63\x3b\xf7\xdb\x29\xe6\xb4\xd7\x4c\xa5\xda\xe2\x3a\xcd\x10\xbd\xcb\x9a\x19\x6b\x48\x10\xd4\xc2\xce\x18\x24\xa4\x40\xe3\x59\x8d\x23\x53\xb4\x57\x20\x5f\x9e\x68\x06\x41\x51\x29\x5a\xba\x89\x30\x0c\xec\xb8\x14\x68\xb5\x9e\x6a\xef\xfd\xfd\xbd\x5d\xf7\xfc\x70\xb3\xf2\x6c\x5f\x41\x62\x0d\xc9\x4b\xc5\x76\xf9\x91\x60\xea\xcc\x66\xfb\x02\x5b\x6a\x48\x3a\xda\x70\x18\xf7\x79\x6d\x50\xd9\xe8\x6e\x8f\x07\x13\x5e\xf3\xfc\x11\xeb\x14\xb4\x5a\xcf\x9c\x58\x67\xce\x3c\xb5\x98\x58\x84\x2f\xe1\x94\x99\x62\xf5\xe1\xf1\xa7\x83\x9e\xfc\xfc\xf7\x09\xed\xdb\xf8\xa8\x71\x8d\x75\xb6\xbb\xa2\xe9\xff\x91\xac\x1e\xd1\x32\x05\xb7\x6b\x17\x7b\xcc\xac\x92\xb7\xec\xf9\x9d\xcb\xed\x80\x2b\x9d\xbd\x99\xe1\x08\x76\x86\x3b\xfb\x21\x05\xb6\x63\x19\x05\xac\x35\xce\x08\x0c\xc5\x79\x9c\x14\x87\x92\xeb\x3e\x5e\xfc\xf9\xbb\xf3\x6f\xbe\xff\xd7\x97\x5f\x9e\xff\xee\xa7\xf3\xdf\xff\xf1\xc5\xdf\xbf\xf2\xde\x1f\x4c\xdc\x7e\x56\xb3\xad\x3b\xee\x77\xe2\x95\x30\x98\xc4\xe2\x2f\x0f\x75\x07\x83\x23\xba\x01\x95\xda\xf2\xe4\x65\x69\xbc\x7d\xd7\x55\xf2\x97\x66\xa1\x20\xf5\x59\x0e\xec\xdc\x6c\x67\xda\x69\x47\x45\x71\x01\xae\x1b\x4a\xfc\x5f\xaf\xd9\x3c\x5f\x49\xed\x9a\x3d\xf7\x24\x9e\x1d\xb4\x35\x77\x27\x52\xea\xcd\x92\xb1\xd7\xab\x51\xc4\x84\x9d\xc0\xdb\xf0\x7f\x57\x58\x26\xb2\xa4\x04\x0d\xc6\x9c\x1a\x72\xdb\x89\x42\x4c\xed\x9d\x65\xe0\x0e\x44\x49\x34\xda\xac\xcf\x46\xf6\x6d\x85\x8e\x3e\x7d\xf3\x59\x68\x8d\xe9\x25\xb8\xe4\xf5\x31\x59\xab\x30\xcf\xc1\xff\x1f\x00\xcd\xe8\xf4\x37\xa5\x31\x00\x26\x9d\x78\x6a\x7d\x5a\x2c\x25\xfc\xef\x18\x50\x8e\x12\x69\xd7\x82\x7d\x5b\x05\x23\x82\xcf\x78\x69\x98\xe7\x09\xc4\x0a\x75\x3b\xa3\x69\xfd\xda\xf5\x6b\xee\x55\xd2\xa7\x89\xf9\x20\xe1\xa7\x08\x8c\x15\x7e\xe6\x63\x61\x92\x47\xf2\x7c\x7c\x1b\x59\xc6\x7d\xdf\x8e\xfd\x18\x03\xee\xb5\xc4\x5e\xb5\x80\xd7\xb4\x7b\x18\x71\x0f\x94\x5e\x51\x82\xd7\xd4\xa4\xb9\x91\xc5\xc5\x81\x4d\xbe\x07\x86\x99\x4e\xbf\xcb\xca\x7d\x47\xea\xe2\x93\x8a\x55\x6c\x70\x31\x0a\x2d\x65\xbe\x04\xdf\x1f\x16\x92\x92\x46\xf2\x16\xcc\x93\x9f\x6b\xbd\x77\x60\xd9\x98\x81\x75\x6b\xf2\x05\xbc\xb6\x8e\x52\xf0\x1c\x6e\xed\x2d\x3e\xa8\x48\x7d\x4e\x65\xc3\x63\x5b\x5c\x98\xe7\xd6\x54\xc9\x44\x7b\x33\xe5\x78\x19\x87\xb3\x23\xdb\x6b\xa6\xc6\xc9\x66\x77\x59\x5d\xa1\x72\xa9\x5c\xd7\x4a\xe8\x47\x57\xbc\x5f\x8d\x43\x52\x0a\xaf\x4f\x69\xf5\xec\xbc\x32\xdd\xcc\x6c\x73\xb1\x8f\xba\x95\xc2\xe6\xa1\x91\xbf\xb0\x97\xd5\x8b\x70\x9d\xfd\x75\xfb\x6b\x1c\xc0\x5f\xf4\x9f\x7a\x80\x2d\x1b\x82\xd5\xce\xdb\x2d\xf8\x2a\x57\x18\x85\xb1\x1a\xee\x33\x86\x9f\xca\x86\x14\x11\xf0\x56\x4f\x0b\x27\x6f\x69\x0a\x51\x4c\xa0\x79\xb8\x17\x5f\x7a\xfc\xfb\xe2\x0b\x9b\x24\x78\xab\x13\xaa\x00\x6f\x58\x91\x27\x33\x55\xb0\x1d\x1e\x53\x79\xab\x9f\xbe\xf1\x2c\xdc\x86\xff\x0e\x00\x00\xff\xff\xae\x53\xef\xd0\x2a\x1c\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 7210, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0xfd, 0xc8, 0x7b, 0xd2, 0x97, 0x4b, 0xc9, 0x11, 0x9, 0x9e, 0xff, 0xe1, 0x7f, 0xb, 0xdf, 0x76, 0xf7, 0x3a, 0x96, 0x7a, 0x6e, 0x8c, 0x8e, 0xcd, 0x5, 0x6b, 0x8b, 0x87, 0x7f, 0xc2, 0x60}}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x5d\x6f\xdb\x36\x14\x7d\x16\x7f\xc5\x9d\x51\x0c\x52\xe1\x50\x7b\x0e\x90\x97\x26\x59\x5b\xac\x69\x83\xd4\xe8\x1e\x8a\xa2\xa0\xa5\x6b\x99\x30\x4d\x2a\x24\xed\xc4\x13\xf4\xdf\x87\x4b\x4a\xb6\x62\x3b\x4e\x06\x74\x01\x02\xcb\xe4\xb9\x9f\xe7\xf0\x52\xce\x73\xb8\x34\x25\x42\x85\x1a\xad\xf0\x58\xc2\x74\x03\xde\xae\x9c\xe3\x70\xf5\x05\x3e\x7f\x99\xc0\xf5\xd5\xc7\x09\x67\x79\x0e\x77\x68\x57\x5a\x4b\x5d\x45\x00\x3c\x48\xa5\xc0\xac\xd1\x3e\x58\xe9\x11\xfc\x5c\x3a\x98\x49\x85\x01\xfc\x0d\xad\x93\x46\x9f\x43\xd3\xf0\xee\xb9\x6d\x07\x1b\x70\x25\x3c\x0e\x77\xe9\x7b\xdb\x32\x56\x8b\x62\x21\x2a\x04\xb7\x2e\x18\xe1\x27\xbd\x5b\xa8\xad\x59\xcb\x12\x1d\x38\xb4\x6b\xb4\x67\x4e\x96\x08\x53\xa9\x4b\xa9\x2b\x07\x33\x63\xc1\xcf\x11\xaa\xbb\xdb\x4b\xf0\x56\x68\x57\x1b\xeb\x43\x2e\x1f\x3d\xac\xbc\x54\xf2\x1f\x74\x01\xb2\xdd\xcd\x2b\x5b\x17\xfc\x6b\x70\xc7\x19\x93\x4b\x5a\x84\x94\x25\x23\x8d\x3e\x9f\x7b\x5f\x8f\x58\x32\x2a\x8c\xf6\xf8\xe8\x47\x8c\x25\xa3\xca\x98\x4a\x21\xaf\x8c\x12\xba\xe2\xc6\x56\xc1\x45\xbe\x44\x2f\x4a\xe1\x05\x61\x68\x61\x1b\x01\x46\x95\xf4\xf3\xd5\x94\x17\x66\x99\x57\xe6\x6c\x21\x7d\x4e\xff\x4f\x53\x18\x31\x00\x00\xe7\x4b\x53\xa3\xf6\x56\x14\xd4\xe4\xa1\xe5\x60\x7d\xf8\x7c\x56\x99\x68\xfa\x4c\x14\x65\xaa\x93\xfb\x47\x5c\x8e\x58\x30\x68\x1a\x2b\x74\x85\xf0\x46\xc2\xf9\x05\xf0\xeb\x47\x8f\x56\x0b\x75\x83\xce\x89\x0a\x3f\x86\x46\xb9\xb6\xed\xb0\x6f\xe4\xf6\xf1\x0c\x50\x97\xc4\x63\xd2\x73\x47\xed\x95\x05\xb2\xa4\x9e\xc2\xa8\x69\xf8\xed\xbb\x68\x7e\x2b\xfc\x1c\xce\xda\x76\xc4\xb2\x40\xf4\x8d\x58\xe0\xfb\xbb\xdb\xcb\x48\x07\x2c\xc5\x02\x1d\x08\x70\xe8\xc1\xcc\xc8\x6b\x6d\xa4\xf6\x0e\xc4\x5a\x48\x25\xa6\x0a\x41\xd0\x7e\xe0\xbb\x69\x78\x17\x86\x7f\x16\x4b\x6c\xdb\x9e\xd3\xd9\x4a\x17\x7b\x9e\xd3\x9d\xab\xeb\xfe\x69\x4c\x9a\x28\xd0\xee\x71\xc0\x27\x61\x75\x0c\xca\x54\x15\x5a\xfa\xe0\x9f\xc2\x63\x06\xf5\x94\x3f\x13\x15\x1a\x96\x44\x89\x7e\xa9\xbd\x34\xda\x51\x0b\xbf\xff\x78\xa2\x8b\x4e\x74\x11\xd0\xb0\x24\x81\x63\xdb\xef\x70\x66\x2c\xa6\xbd\xba\x26\xe6\x32\x4a\x31\x1b\x3f\x67\x71\x6d\xad\xb1\x31\xc5\x34\x26\x4d\x58\xa2\x43\x94\x65\xac\x26\xc6\xa4\x9c\xa8\x39\xe4\x7c\x6e\x4a\xca\x1f\x9c\xb7\x52\x57\xd9\xc9\x5c\xa9\x38\x62\x5a\xce\xfa\x96\xfd\x76\x01\x5a\xaa\x7e\x9d\xfe\x2c\xfa\x95\xd5\x20\xea\x1a\x75\x99\x3e\x69\xc5\xf8\x54\x9d\xc3\xce\x13\x5f\xdb\x7a\x53\xdf\xf1\xb0\x4b\xb6\xe7\x24\xcb\xb2\x18\xb8\x8d\x1f\x5d\xec\x27\x41\x63\x03\xba\x9d\xdf\x29\x81\x18\xb6\x09\x22\x6d\x1a\x98\x98\x4f\xe6\x01\x2d\x3c\xa1\x13\xda\x96\x25\x7b\xe7\xa0\xdf\xbf\x09\x79\xd0\x01\x48\x92\xa6\xe9\xcd\xdf\xc8\x4e\x07\xe7\x7b\x55\x7e\xc6\x87\x4e\x7b\x2c\x49\x92\xad\xfe\x38\x9d\x9c\xce\xa4\x97\x22\x31\x9b\x5c\x61\x61\xca\x20\xd9\x01\xe2\x0e\xef\x57\xe8\x22\xe0\x5a\x1f\x05\xb8\xda\x68\x87\x01\xb1\x47\x77\x3a\x0a\xc0\xaf\x5a\x2c\x30\xa2\x47\x19\xe7\x3c\x40\xf3\xfc\x7f\x60\xea\x30\xde\x80\xb1\x2e\x32\x49\x73\x37\x31\x92\x96\xb5\x61\x10\xec\x08\x02\xb9\xac\x15\x2e\x91\xce\x2a\x0d\xee\xa6\x79\x6f\x02\x35\xc7\xcf\x9d\xd4\x1e\xed\x4c\x14\xc8\xfc\xa6\xc6\xa1\x1f\xe7\xed\xaa\xf0\xd0\xb0\x97\xf9\x3c\x42\x27\xc0\x5e\x2f\x3e\x08\x5d\x2a\xb4\x6c\x97\x7c\xcc\xbc\x73\x13\xee\xa2\x41\x74\x6f\x76\x85\xbc\xbe\x86\x17\x53\x0d\xb3\x2d\x75\xf0\x76\x17\x2a\xdb\xb9\xdf\x66\x9f\x16\xfe\x11\xba\x3b\x8c\x77\x34\x8d\xc1\xe2\x3d\xbc\x6d\x9a\xdb\x78\xdb\xf6\x16\x9d\xc6\x26\x9b\xba\x4f\x8b\x0f\x1d\x1e\x6e\x67\x90\x1e\xf3\x12\x85\xf8\xbc\x9b\x83\xfd\x31\x20\x4d\xae\x8c\xc6\xc8\x4f\xca\xae\x0e\x2b\x54\x39\x1d\x93\x03\x4a\xa2\x1c\x49\x7a\x54\x5e\x28\x27\x63\x89\x9c\x05\xa3\xdd\x44\xea\x0f\xbd\x96\x2a\xf8\x23\x91\xf5\x6b\x16\x6b\xfe\x6b\x92\xcf\xc6\x14\x80\xb5\xac\x69\xba\xcb\x2f\xcf\xa1\xe3\x33\x1e\xe5\x97\xc9\xcc\x73\x38\x75\xea\x41\xd2\x5d\xb7\xf7\xe2\x12\x0d\x3a\xc4\x9f\xa4\x06\x3f\x17\x9e\xb8\x5e\xa3\xa5\x9b\x32\x9c\xa6\x78\x3f\x1e\x8a\xda\x76\x9e\xbd\x01\x01\x2b\x87\xf6\xac\x34\x4b\x21\xf5\x29\x30\x87\x5b\x2b\x97\xc2\x4a\xb5\x21\x93\xd9\x4a\x81\xd4\xe1\x92\x1e\x5c\xb7\xa7\xea\x48\x7f\x1e\x4a\x91\x6a\xb9\xc3\xfb\x9d\xf4\x1b\x92\xd5\xe0\xdb\x50\x1c\xa4\xdb\xf3\x8b\xde\xe6\x38\x81\xff\x55\xc3\x03\x49\xdc\x9f\xa0\x32\x0e\xdd\x57\x51\x79\x72\x3e\x1f\xe5\x32\x5a\xf4\x90\xe7\xc8\x7c\x99\xa6\x2e\x44\x20\xf5\x04\xf5\xb5\xda\xbc\x8a\xcb\x93\x85\x1c\x23\x73\x9b\xc1\x2b\xd9\x74\x35\x75\xb1\xb7\xfa\x55\x07\x72\xc0\xa8\xab\x8f\x51\xfa\x01\x55\x8d\xd6\xb1\x58\xe5\xc1\x0b\xd6\xf1\x99\xb9\x2c\xb7\x48\x7e\x73\x95\xed\x03\xa8\x20\x9a\xfc\x8b\x31\xac\x43\x51\x41\x26\xcb\x32\x0c\x22\x39\x83\xf5\x70\x30\xc5\xd7\x63\x84\x05\x6e\x82\x1e\xca\x92\x7e\x7b\x19\x3f\x27\x12\xfa\x28\x74\x91\x2c\x85\x87\x74\x91\xc1\xc3\x5c\x16\xf3\x00\x55\x0a\x14\x11\xda\x79\x11\xba\x0c\x97\x23\xfd\x5c\xe1\x97\x42\x1b\x2d\x0b\xa1\x3e\xa0\x28\xd1\xfe\x85\x1b\x7a\x79\xf6\x5d\x20\x67\xa2\xa8\xa4\x87\x42\x68\x98\x62\xef\xa2\x28\xd0\x39\x2c\x29\x36\x4a\x3f\x47\xdb\x45\xa6\x7d\x6a\xc5\xc5\xb6\xd6\xbf\xa5\x9f\x7f\x13\x6a\x85\x71\xee\x52\xad\xdf\xff\xf8\x91\xbd\x08\x7c\x26\xbb\x74\x91\xed\x3c\xb4\x4f\x5e\xd4\x0a\xff\xc8\x5a\xf6\x6f\x00\x00\x00\xff\xff\xc5\x46\xfb\x6e\xa1\x0e\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 3745, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x5c, 0x2f, 0x59, 0xe2, 0x3b, 0xb3, 0x30, 0xd1, 0x86, 0xe2, 0xf5, 0x84, 0x99, 0xc9, 0x3, 0x72, 0x33, 0x29, 0x45, 0x60, 0xc4, 0x21, 0xb3, 0xb2, 0x9c, 0xde, 0xce, 0xa2, 0x75, 0x36, 0xa9}}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(0666), modTime: time.Unix(1596634380, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x57, 0x56, 0xc6, 0xb4, 0xe5, 0x1f, 0xf4, 0x1d, 0xa5, 0xda, 0x23, 0xea, 0x8f, 0xfb, 0xff, 0xae, 0x4b, 0x12, 0xe4, 0xf6, 0xbf, 0x11, 0xa6, 0x4, 0x83, 0x53, 0xfd, 0xbf, 0xce, 0x4a, 0x47}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-client/client.gotemplate":               nameClientClientGotemplate,
	"NAME-client/endpoints.gotemplate":            nameClientEndpointsGotemplate,
	"NAME-client/grpc.gotemplate":                 nameClientGrpcGotemplate,
	"cmd/NAME-server/main.gotemplate":             cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate":                handlersHandlersGotemplate,
	"handlers/hooks.gotemplate":                   handlersHooksGotemplate,
	"handlers/middlewares.gotemplate":             handlersMiddlewaresGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate":           svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate":           svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate":                    svcEndpointsGotemplate,
	"svc/server/run.gotemplate":                   svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate":               svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate":               svcTransport_httpGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-client": &bintree{nil, map[string]*bintree{
		"client.gotemplate":    &bintree{nameClientClientGotemplate, map[string]*bintree{}},
		"endpoints.gotemplate": &bintree{nameClientEndpointsGotemplate, map[string]*bintree{}},
		"grpc.gotemplate":      &bintree{nameClientGrpcGotemplate, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate":    &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate":       &bintree{handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
